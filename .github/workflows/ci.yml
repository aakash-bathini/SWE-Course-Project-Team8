name: CI

on:
  push:
    branches: [ main, testing, logintodashboard ]
  pull_request:
    branches: [ main ]

jobs:
  backend-lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install deps
        run: |
          python -m pip install -U pip
          pip install -r requirements.txt -r requirements-dev.txt
      - name: Black check
        run: python -m black --check .
      - name: flake8
        run: python -m flake8 .

  backend-typecheck:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install deps
        run: |
          python -m pip install -U pip
          pip install -r requirements.txt -r requirements-dev.txt
      - name: mypy
        run: python -m mypy .

  backend-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install deps
        run: |
          python -m pip install -U pip
          pip install -r requirements.txt -r requirements-dev.txt
      - name: pytest with coverage
        run: |
          pytest -q --cov=. --cov-report=term-missing

  frontend-ci:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json
      - name: Install (legacy peer deps to avoid eslint@8 vs ts-eslint@8 conflict)
        working-directory: frontend
        run: npm install --legacy-peer-deps
      - name: Type check
        working-directory: frontend
        run: npx tsc --noEmit
      - name: ESLint
        working-directory: frontend
        run: npx eslint -c eslint.config.cjs "src/**/*.{ts,tsx}"
      - name: Jest tests
        working-directory: frontend
        run: npm test -- --ci --watchAll=false

  # Placeholder deploy job (gated to main)
  deploy:
    if: github.ref == 'refs/heads/main'
    needs: [backend-lint, backend-typecheck, backend-test, frontend-ci]
    runs-on: ubuntu-latest
    steps:
      - run: echo "Deploy step is gated and will be implemented with AWS later."
