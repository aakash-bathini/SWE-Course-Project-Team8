15:52:13 [DEBUG] asyncio: Using selector: EpollSelector
15:52:13 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): api.github.com:443
15:52:14 [DEBUG] urllib3.connectionpool: https://api.github.com:443 "GET /repos/pallets/flask HTTP/1.1" 200 None
15:52:14 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): api.github.com:443
15:52:14 [DEBUG] urllib3.connectionpool: https://api.github.com:443 "GET /repos/pallets/flask/readme HTTP/1.1" 200 None
15:52:14 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): api.github.com:443
15:52:14 [DEBUG] urllib3.connectionpool: https://api.github.com:443 "GET /repos/pallets/flask/contributors?per_page=100&anon=1 HTTP/1.1" 200 None
15:52:14 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): api.github.com:443
15:52:14 [DEBUG] urllib3.connectionpool: https://api.github.com:443 "GET /repos/pallets/flask/git/trees/main?recursive=1 HTTP/1.1" 200 None
15:52:15 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): api.github.com:443
15:52:15 [DEBUG] urllib3.connectionpool: https://api.github.com:443 "GET /repos/pallets/flask/contents/.github/ISSUE_TEMPLATE/bug-report.md?ref=main HTTP/1.1" 200 None
15:52:15 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): api.github.com:443
15:52:15 [DEBUG] urllib3.connectionpool: https://api.github.com:443 "GET /repos/pallets/flask/contents/.github/ISSUE_TEMPLATE/feature-request.md?ref=main HTTP/1.1" 200 None
15:52:15 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): api.github.com:443
15:52:15 [DEBUG] urllib3.connectionpool: https://api.github.com:443 "GET /repos/pallets/flask/contents/.github/pull_request_template.md?ref=main HTTP/1.1" 200 None
15:52:15 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): api.github.com:443
15:52:15 [DEBUG] urllib3.connectionpool: https://api.github.com:443 "GET /repos/pallets/flask/contents/CHANGES.rst?ref=main HTTP/1.1" 200 None
15:52:15 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): api.github.com:443
15:52:15 [DEBUG] urllib3.connectionpool: https://api.github.com:443 "GET /repos/pallets/flask/contents/LICENSE.txt?ref=main HTTP/1.1" 200 None
15:52:15 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): api.github.com:443
15:52:16 [DEBUG] urllib3.connectionpool: https://api.github.com:443 "GET /repos/pallets/flask/contents/README.md?ref=main HTTP/1.1" 200 None
15:52:16 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): api.github.com:443
15:52:16 [DEBUG] urllib3.connectionpool: https://api.github.com:443 "GET /repos/pallets/flask/contents/docs/api.rst?ref=main HTTP/1.1" 200 None
15:52:16 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): api.github.com:443
15:52:16 [DEBUG] urllib3.connectionpool: https://api.github.com:443 "GET /repos/pallets/flask/contents/docs/appcontext.rst?ref=main HTTP/1.1" 200 None
15:52:16 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): api.github.com:443
15:52:16 [DEBUG] urllib3.connectionpool: https://api.github.com:443 "GET /repos/pallets/flask/contents/docs/async-await.rst?ref=main HTTP/1.1" 200 None
15:52:16 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): api.github.com:443
15:52:17 [DEBUG] urllib3.connectionpool: https://api.github.com:443 "GET /repos/pallets/flask/contents/docs/blueprints.rst?ref=main HTTP/1.1" 200 None
15:52:17 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): api.github.com:443
15:52:17 [DEBUG] urllib3.connectionpool: https://api.github.com:443 "GET /repos/pallets/flask/contents/docs/changes.rst?ref=main HTTP/1.1" 200 None
15:52:17 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): api.github.com:443
15:52:17 [DEBUG] urllib3.connectionpool: https://api.github.com:443 "GET /repos/pallets/flask/contents/docs/cli.rst?ref=main HTTP/1.1" 200 None
15:52:17 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): api.github.com:443
15:52:17 [DEBUG] urllib3.connectionpool: https://api.github.com:443 "GET /repos/pallets/flask/contents/docs/config.rst?ref=main HTTP/1.1" 200 None
15:52:17 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): api.github.com:443
15:52:17 [DEBUG] urllib3.connectionpool: https://api.github.com:443 "GET /repos/pallets/flask/contents/docs/contributing.rst?ref=main HTTP/1.1" 200 None
15:52:17 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): api.github.com:443
15:52:18 [DEBUG] urllib3.connectionpool: https://api.github.com:443 "GET /repos/pallets/flask/contents/docs/debugging.rst?ref=main HTTP/1.1" 200 None
15:52:18 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): api.github.com:443
15:52:18 [DEBUG] urllib3.connectionpool: https://api.github.com:443 "GET /repos/pallets/flask/contents/docs/deploying/apache-httpd.rst?ref=main HTTP/1.1" 200 None
15:52:18 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): api.github.com:443
15:52:18 [DEBUG] urllib3.connectionpool: https://api.github.com:443 "GET /repos/pallets/flask/contents/docs/deploying/asgi.rst?ref=main HTTP/1.1" 200 None
15:52:18 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): api.github.com:443
15:52:18 [DEBUG] urllib3.connectionpool: https://api.github.com:443 "GET /repos/pallets/flask/contents/docs/deploying/eventlet.rst?ref=main HTTP/1.1" 200 None
15:52:18 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): api.github.com:443
15:52:18 [DEBUG] urllib3.connectionpool: https://api.github.com:443 "GET /repos/pallets/flask/contents/docs/deploying/gevent.rst?ref=main HTTP/1.1" 200 None
15:52:18 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): api.github.com:443
15:52:19 [DEBUG] urllib3.connectionpool: https://api.github.com:443 "GET /repos/pallets/flask/contents/docs/deploying/gunicorn.rst?ref=main HTTP/1.1" 200 None
15:52:19 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): api.github.com:443
15:52:19 [DEBUG] urllib3.connectionpool: https://api.github.com:443 "GET /repos/pallets/flask/contents/docs/deploying/index.rst?ref=main HTTP/1.1" 200 None
15:52:19 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): api.github.com:443
15:52:19 [DEBUG] urllib3.connectionpool: https://api.github.com:443 "GET /repos/pallets/flask/contents/docs/deploying/mod_wsgi.rst?ref=main HTTP/1.1" 200 None
15:52:19 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): api.github.com:443
15:52:19 [DEBUG] urllib3.connectionpool: https://api.github.com:443 "GET /repos/pallets/flask/contents/docs/deploying/nginx.rst?ref=main HTTP/1.1" 200 None
15:52:19 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): api.github.com:443
15:52:19 [DEBUG] urllib3.connectionpool: https://api.github.com:443 "GET /repos/pallets/flask/contents/docs/deploying/proxy_fix.rst?ref=main HTTP/1.1" 200 None
15:52:19 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): api.github.com:443
15:52:20 [DEBUG] urllib3.connectionpool: https://api.github.com:443 "GET /repos/pallets/flask/contents/docs/deploying/uwsgi.rst?ref=main HTTP/1.1" 200 None
15:52:20 [DEBUG] asyncio: Using selector: EpollSelector
15:52:20 [INFO] src.orchestration.metric_orchestrator: Starting orchestration with 7 metrics (limit=4, url=https://huggingface.co/google/gemma-2b)
15:52:20 [DEBUG] src.orchestration.metric_orchestrator: Dispatched 7 tasks (url=https://huggingface.co/google/gemma-2b)
15:52:20 [DEBUG] src.orchestration.metric_orchestrator: Acquired slot for performance_claims (url=https://huggingface.co/google/gemma-2b)
15:52:20 [DEBUG] src.orchestration.metric_orchestrator: Starting metric performance_claims for url=https://huggingface.co/google/gemma-2b
15:52:20 [INFO] root: Calling Purdue GenAI with prompt for performance metric:      Analyze the following README content for performance claims and evidence quality.       Look for:     1. Quantitative benchmark results (specific numbers, scores, metrics)     2. Comparisons with other models (with data)     3. Dataset evaluations and test results     4. Performance metrics (accuracy, F1, BLEU, etc.)     5. Subjective claims without evidence ("best in class", "state-of-the-art" without data)      Rate each type of claim on evidence quality and specificity.      README Conte...
15:52:20 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): genai.rcac.purdue.edu:443
15:52:40 [DEBUG] urllib3.connectionpool: https://genai.rcac.purdue.edu:443 "POST /api/chat/completions HTTP/1.1" 200 762
15:52:40 [INFO] root: Performance Metric -> Quality: 1.0, Specificity: 1.0, Total Claims: 5, Quantitative Claims: 5, Benchmark Count: 5, Has Tables/Charts: True
15:52:40 [INFO] src.orchestration.metric_orchestrator: Metric performance_claims succeeded in 20186 ms (url=https://huggingface.co/google/gemma-2b)
15:52:40 [DEBUG] src.orchestration.metric_orchestrator: Finished performance_claims (latency=20186 ms, error=False, url=https://huggingface.co/google/gemma-2b)
15:52:40 [DEBUG] src.orchestration.metric_orchestrator: Acquired slot for bus_factor (url=https://huggingface.co/google/gemma-2b)
15:52:40 [DEBUG] src.orchestration.metric_orchestrator: Starting metric bus_factor for url=https://huggingface.co/google/gemma-2b
15:52:40 [INFO] root: Bus Factor Metric -> contributors=3, top_share=0.61, score=0.54
15:52:40 [INFO] src.orchestration.metric_orchestrator: Metric bus_factor succeeded in 0 ms (url=https://huggingface.co/google/gemma-2b)
15:52:40 [DEBUG] src.orchestration.metric_orchestrator: Finished bus_factor (latency=0 ms, error=False, url=https://huggingface.co/google/gemma-2b)
15:52:40 [DEBUG] src.orchestration.metric_orchestrator: Acquired slot for code_quality (url=https://huggingface.co/google/gemma-2b)
15:52:40 [DEBUG] src.orchestration.metric_orchestrator: Starting metric code_quality for url=https://huggingface.co/google/gemma-2b
15:52:40 [INFO] root: Linting=1.0, Typing=1.0, Tests=0.7, Maintainability=0.0
15:52:40 [INFO] src.orchestration.metric_orchestrator: Metric code_quality succeeded in 184 ms (url=https://huggingface.co/google/gemma-2b)
15:52:40 [DEBUG] src.orchestration.metric_orchestrator: Finished code_quality (latency=184 ms, error=False, url=https://huggingface.co/google/gemma-2b)
15:52:40 [DEBUG] src.orchestration.metric_orchestrator: Acquired slot for license (url=https://huggingface.co/google/gemma-2b)
15:52:40 [DEBUG] src.orchestration.metric_orchestrator: Starting metric license for url=https://huggingface.co/google/gemma-2b
15:52:40 [INFO] root: license_check: source=LICENSE, spdx_ids=['Apache-2.0'], hints=['apache license', 'apache'] => Explicit SPDX whitelist: Apache-2.0
15:52:40 [DEBUG] src.orchestration.metric_orchestrator: Acquired slot for dataset_quality (url=https://huggingface.co/google/gemma-2b)
15:52:40 [DEBUG] src.orchestration.metric_orchestrator: Starting metric dataset_quality for url=https://huggingface.co/google/gemma-2b
15:52:40 [INFO] root: dataset_quality: not a dataset
15:52:40 [INFO] src.orchestration.metric_orchestrator: Metric dataset_quality succeeded in 0 ms (url=https://huggingface.co/google/gemma-2b)
15:52:40 [DEBUG] src.orchestration.metric_orchestrator: Finished dataset_quality (latency=0 ms, error=False, url=https://huggingface.co/google/gemma-2b)
15:52:40 [DEBUG] src.orchestration.metric_orchestrator: Acquired slot for ramp_up_time (url=https://huggingface.co/google/gemma-2b)
15:52:40 [DEBUG] src.orchestration.metric_orchestrator: Starting metric ramp_up_time for url=https://huggingface.co/google/gemma-2b
15:52:40 [INFO] root: Repo README subscore: install=1.0, usage=1.0, desc=1.0, io=1.0, links=1.0 => 1.000
15:52:40 [DEBUG] root: TOTAL PATHS: 1911
15:52:40 [DEBUG] root: PATH: 'tests/distributed_test.py'
15:52:40 [DEBUG] root: PATH: 'jax/experimental/mosaic/gpu'
15:52:40 [DEBUG] root: PATH: 'docs/jep/17111-shmap-transpose.md'
15:52:40 [DEBUG] root: PATH: 'jax/_src/buffer_callback.py'
15:52:40 [DEBUG] root: PATH: 'tests/optimizers_test.py'
15:52:40 [DEBUG] root: PATH: 'jax/_src/internal_test_util/export_back_compat_test_data/pallas/__init__.py'
15:52:40 [DEBUG] root: PATH: 'jaxlib/mosaic/gpu/runtime.cc'
15:52:40 [DEBUG] root: PATH: 'docs/notebooks/Neural_Network_and_Data_Loading.ipynb'
15:52:40 [DEBUG] root: PATH: '.github/actions'
15:52:40 [DEBUG] root: PATH: 'jax/_src/scipy/cluster/__init__.py'
15:52:40 [DEBUG] root: PATH: 'jax/_src/pallas/mosaic_gpu/primitives.py'
15:52:40 [DEBUG] root: PATH: 'tests/pallas/export_pallas_test.py'
15:52:40 [DEBUG] root: PATH: 'jax/extend/core/primitives.py'
15:52:40 [DEBUG] root: PATH: 'jaxlib/mlir/BUILD.bazel'
15:52:40 [DEBUG] root: PATH: 'jaxlib/gpu/prng_kernels.cc'
15:52:40 [DEBUG] root: PATH: 'jax/experimental/pallas/ops/tpu/splash_attention/splash_attention_mask_info.py'
15:52:40 [DEBUG] root: PATH: 'tests/pallas/mgpu_matmul_test.py'
15:52:40 [DEBUG] root: PATH: 'docs/notebooks/Writing_custom_interpreters_in_Jax.md'
15:52:40 [DEBUG] root: PATH: 'jax/extend/mlir/dialects/func.py'
15:52:40 [DEBUG] root: PATH: 'jaxlib/mlir/_mlir_libs/traceback_to_location.h'
15:52:40 [DEBUG] root: PATH: 'build/rocm/dev_build_rocm.py'
15:52:40 [DEBUG] root: PATH: 'tests/fft_test.py'
15:52:40 [DEBUG] root: PATH: 'jaxlib/mlir.cc'
15:52:40 [DEBUG] root: PATH: 'docs/notes.rst'
15:52:40 [DEBUG] root: PATH: 'jax/tools/build_defs.bzl'
15:52:40 [INFO] root: Repo examples subscore: has_nb=True, has_ex=True, py_examples=42 => 0.700
15:52:40 [INFO] root: Repo manifest subscore: has_reqs=True, has_env=False, has_setup=True, has_pyproj=True, has_conda=False, has_docker=True, has_make=True, has_pipfile=False => 1.000
15:52:40 [INFO] src.orchestration.metric_orchestrator: Metric ramp_up_time succeeded in 13 ms (url=https://huggingface.co/google/gemma-2b)
15:52:40 [DEBUG] src.orchestration.metric_orchestrator: Finished ramp_up_time (latency=13 ms, error=False, url=https://huggingface.co/google/gemma-2b)
15:52:40 [DEBUG] src.orchestration.metric_orchestrator: Acquired slot for dataset_and_code_score (url=https://huggingface.co/google/gemma-2b)
15:52:40 [DEBUG] src.orchestration.metric_orchestrator: Starting metric dataset_and_code_score for url=https://huggingface.co/google/gemma-2b
15:52:40 [INFO] src.orchestration.metric_orchestrator: Metric dataset_and_code_score succeeded in 0 ms (url=https://huggingface.co/google/gemma-2b)
15:52:40 [DEBUG] src.orchestration.metric_orchestrator: Finished dataset_and_code_score (latency=0 ms, error=False, url=https://huggingface.co/google/gemma-2b)
15:52:40 [INFO] src.orchestration.metric_orchestrator: Metric license succeeded in 21 ms (url=https://huggingface.co/google/gemma-2b)
15:52:40 [DEBUG] src.orchestration.metric_orchestrator: Finished license (latency=21 ms, error=False, url=https://huggingface.co/google/gemma-2b)
15:52:40 [INFO] src.orchestration.metric_orchestrator: Orchestration finished in 20396 ms (success=7, failed=0, url=https://huggingface.co/google/gemma-2b)
15:52:40 [INFO] src.orchestration.metric_orchestrator: Starting orchestration with 7 metrics (limit=4, url=https://github.com/pallets/flask)
15:52:40 [DEBUG] src.orchestration.metric_orchestrator: Dispatched 7 tasks (url=https://github.com/pallets/flask)
15:52:40 [DEBUG] src.orchestration.metric_orchestrator: Acquired slot for performance_claims (url=https://github.com/pallets/flask)
15:52:40 [DEBUG] src.orchestration.metric_orchestrator: Starting metric performance_claims for url=https://github.com/pallets/flask
15:52:40 [INFO] root: Calling Purdue GenAI with prompt for performance metric:      Analyze the following README content for performance claims and evidence quality.       Look for:     1. Quantitative benchmark results (specific numbers, scores, metrics)     2. Comparisons with other models (with data)     3. Dataset evaluations and test results     4. Performance metrics (accuracy, F1, BLEU, etc.)     5. Subjective claims without evidence ("best in class", "state-of-the-art" without data)      Rate each type of claim on evidence quality and specificity.      README Conte...
15:52:40 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): genai.rcac.purdue.edu:443
15:52:43 [DEBUG] urllib3.connectionpool: https://genai.rcac.purdue.edu:443 "POST /api/chat/completions HTTP/1.1" 200 351
15:52:43 [INFO] root: Performance Metric -> Quality: 0.0, Specificity: 0.0, Total Claims: 0, Quantitative Claims: 0, Benchmark Count: 0, Has Tables/Charts: False
15:52:43 [INFO] src.orchestration.metric_orchestrator: Metric performance_claims succeeded in 3066 ms (url=https://github.com/pallets/flask)
15:52:43 [DEBUG] src.orchestration.metric_orchestrator: Finished performance_claims (latency=3066 ms, error=False, url=https://github.com/pallets/flask)
15:52:43 [DEBUG] src.orchestration.metric_orchestrator: Acquired slot for bus_factor (url=https://github.com/pallets/flask)
15:52:43 [DEBUG] src.orchestration.metric_orchestrator: Starting metric bus_factor for url=https://github.com/pallets/flask
15:52:43 [INFO] root: Bus Factor Metric -> contributors=100, top_share=0.39, score=0.78
15:52:43 [INFO] src.orchestration.metric_orchestrator: Metric bus_factor succeeded in 0 ms (url=https://github.com/pallets/flask)
15:52:43 [DEBUG] src.orchestration.metric_orchestrator: Finished bus_factor (latency=0 ms, error=False, url=https://github.com/pallets/flask)
15:52:43 [DEBUG] src.orchestration.metric_orchestrator: Acquired slot for code_quality (url=https://github.com/pallets/flask)
15:52:43 [DEBUG] src.orchestration.metric_orchestrator: Starting metric code_quality for url=https://github.com/pallets/flask
15:52:43 [INFO] root: Linting=1.0, Typing=1.0, Tests=0.7, Maintainability=0.0
15:52:43 [INFO] src.orchestration.metric_orchestrator: Metric code_quality succeeded in 201 ms (url=https://github.com/pallets/flask)
15:52:43 [DEBUG] src.orchestration.metric_orchestrator: Finished code_quality (latency=201 ms, error=False, url=https://github.com/pallets/flask)
15:52:43 [DEBUG] src.orchestration.metric_orchestrator: Acquired slot for license (url=https://github.com/pallets/flask)
15:52:43 [DEBUG] src.orchestration.metric_orchestrator: Starting metric license for url=https://github.com/pallets/flask
15:52:43 [DEBUG] src.orchestration.metric_orchestrator: Acquired slot for dataset_quality (url=https://github.com/pallets/flask)
15:52:43 [INFO] root: license_check: source=LICENSE, spdx_ids=['BSD-3-Clause'], hints=[] => Explicit SPDX whitelist: BSD-3-Clause
15:52:43 [DEBUG] src.orchestration.metric_orchestrator: Starting metric dataset_quality for url=https://github.com/pallets/flask
15:52:43 [WARNING] root: dataset_quality: no huggingface data available
15:52:43 [INFO] src.orchestration.metric_orchestrator: Metric dataset_quality succeeded in 0 ms (url=https://github.com/pallets/flask)
15:52:43 [DEBUG] src.orchestration.metric_orchestrator: Finished dataset_quality (latency=0 ms, error=False, url=https://github.com/pallets/flask)
15:52:43 [DEBUG] src.orchestration.metric_orchestrator: Acquired slot for ramp_up_time (url=https://github.com/pallets/flask)
15:52:43 [DEBUG] src.orchestration.metric_orchestrator: Starting metric ramp_up_time for url=https://github.com/pallets/flask
15:52:43 [INFO] root: Repo README subscore: install=0.0, usage=1.0, desc=0.0, io=1.0, links=1.0 => 0.600
15:52:43 [DEBUG] root: TOTAL PATHS: 285
15:52:43 [DEBUG] root: PATH: 'examples/tutorial/LICENSE.txt'
15:52:43 [DEBUG] root: PATH: 'examples/celery/src/task_app/views.py'
15:52:43 [DEBUG] root: PATH: 'docs/conf.py'
15:52:43 [DEBUG] root: PATH: 'tests/test_apps/blueprintapp/apps/admin/templates/admin/index.html'
15:52:43 [DEBUG] root: PATH: 'tests/test_converters.py'
15:52:43 [DEBUG] root: PATH: 'src/flask/logging.py'
15:52:43 [DEBUG] root: PATH: 'docs/_static/pycharm-run-config.png'
15:52:43 [DEBUG] root: PATH: '.github/ISSUE_TEMPLATE/bug-report.md'
15:52:43 [DEBUG] root: PATH: 'docs/patterns/methodoverrides.rst'
15:52:43 [DEBUG] root: PATH: 'docs/patterns/subclassing.rst'
15:52:43 [DEBUG] root: PATH: 'examples/tutorial/flaskr/auth.py'
15:52:43 [DEBUG] root: PATH: 'docs/deploying/nginx.rst'
15:52:43 [DEBUG] root: PATH: '.github/ISSUE_TEMPLATE'
15:52:43 [DEBUG] root: PATH: 'examples/celery/pyproject.toml'
15:52:43 [DEBUG] root: PATH: 'examples/tutorial/tests/data.sql'
15:52:43 [DEBUG] root: PATH: 'tests/templates'
15:52:43 [DEBUG] root: PATH: 'docs/patterns/viewdecorators.rst'
15:52:43 [DEBUG] root: PATH: 'src/flask/json/provider.py'
15:52:43 [DEBUG] root: PATH: 'tests/type_check/typing_app_decorators.py'
15:52:43 [DEBUG] root: PATH: 'docs/templating.rst'
15:52:43 [DEBUG] root: PATH: 'tests/type_check/typing_route.py'
15:52:43 [DEBUG] root: PATH: 'src/flask/views.py'
15:52:43 [DEBUG] root: PATH: 'docs/tutorial/views.rst'
15:52:43 [DEBUG] root: PATH: 'docs/web-security.rst'
15:52:43 [DEBUG] root: PATH: 'src/flask/blueprints.py'
15:52:43 [INFO] root: Repo examples subscore: has_nb=True, has_ex=True, py_examples=17 => 0.700
15:52:43 [INFO] root: Repo manifest subscore: has_reqs=True, has_env=False, has_setup=False, has_pyproj=True, has_conda=False, has_docker=False, has_make=True, has_pipfile=False => 1.000
15:52:43 [INFO] src.orchestration.metric_orchestrator: Metric ramp_up_time succeeded in 9 ms (url=https://github.com/pallets/flask)
15:52:43 [DEBUG] src.orchestration.metric_orchestrator: Finished ramp_up_time (latency=9 ms, error=False, url=https://github.com/pallets/flask)
15:52:43 [DEBUG] src.orchestration.metric_orchestrator: Acquired slot for dataset_and_code_score (url=https://github.com/pallets/flask)
15:52:43 [DEBUG] src.orchestration.metric_orchestrator: Starting metric dataset_and_code_score for url=https://github.com/pallets/flask
15:52:43 [INFO] src.orchestration.metric_orchestrator: Metric dataset_and_code_score succeeded in 0 ms (url=https://github.com/pallets/flask)
15:52:43 [DEBUG] src.orchestration.metric_orchestrator: Finished dataset_and_code_score (latency=0 ms, error=False, url=https://github.com/pallets/flask)
15:52:43 [INFO] src.orchestration.metric_orchestrator: Metric license succeeded in 14 ms (url=https://github.com/pallets/flask)
15:52:43 [DEBUG] src.orchestration.metric_orchestrator: Finished license (latency=14 ms, error=False, url=https://github.com/pallets/flask)
15:52:43 [INFO] src.orchestration.metric_orchestrator: Orchestration finished in 3286 ms (success=7, failed=0, url=https://github.com/pallets/flask)
16:05:53 [DEBUG] asyncio: Using selector: EpollSelector
16:05:53 [DEBUG] asyncio: Using selector: EpollSelector
16:05:53 [INFO] src.orchestration.metric_orchestrator: Starting orchestration with 7 metrics (limit=4, url=https://huggingface.co/google/gemma-2b)
16:05:53 [DEBUG] src.orchestration.metric_orchestrator: Dispatched 7 tasks (url=https://huggingface.co/google/gemma-2b)
16:05:53 [DEBUG] src.orchestration.metric_orchestrator: Acquired slot for performance_claims (url=https://huggingface.co/google/gemma-2b)
16:05:53 [DEBUG] src.orchestration.metric_orchestrator: Starting metric performance_claims for url=https://huggingface.co/google/gemma-2b
16:05:53 [INFO] root: Calling Purdue GenAI with prompt for performance metric:      Analyze the following README content for performance claims and evidence quality.       Look for:     1. Quantitative benchmark results (specific numbers, scores, metrics)     2. Comparisons with other models (with data)     3. Dataset evaluations and test results     4. Performance metrics (accuracy, F1, BLEU, etc.)     5. Subjective claims without evidence ("best in class", "state-of-the-art" without data)      Rate each type of claim on evidence quality and specificity.      README Conte...
16:05:53 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): genai.rcac.purdue.edu:443
16:06:05 [DEBUG] urllib3.connectionpool: https://genai.rcac.purdue.edu:443 "POST /api/chat/completions HTTP/1.1" 200 593
16:06:05 [INFO] root: Performance Metric -> Quality: 1.0, Specificity: 1.0, Total Claims: 3, Quantitative Claims: 3, Benchmark Count: 1, Has Tables/Charts: True
16:06:05 [INFO] src.orchestration.metric_orchestrator: Metric performance_claims succeeded in 11945 ms (url=https://huggingface.co/google/gemma-2b)
16:06:05 [DEBUG] src.orchestration.metric_orchestrator: Finished performance_claims (latency=11945 ms, error=False, url=https://huggingface.co/google/gemma-2b)
16:06:05 [DEBUG] src.orchestration.metric_orchestrator: Acquired slot for bus_factor (url=https://huggingface.co/google/gemma-2b)
16:06:05 [DEBUG] src.orchestration.metric_orchestrator: Starting metric bus_factor for url=https://huggingface.co/google/gemma-2b
16:06:05 [INFO] root: Bus Factor Metric -> contributors=3, top_share=0.61, score=0.54
16:06:05 [INFO] src.orchestration.metric_orchestrator: Metric bus_factor succeeded in 0 ms (url=https://huggingface.co/google/gemma-2b)
16:06:05 [DEBUG] src.orchestration.metric_orchestrator: Finished bus_factor (latency=0 ms, error=False, url=https://huggingface.co/google/gemma-2b)
16:06:05 [DEBUG] src.orchestration.metric_orchestrator: Acquired slot for code_quality (url=https://huggingface.co/google/gemma-2b)
16:06:05 [DEBUG] src.orchestration.metric_orchestrator: Starting metric code_quality for url=https://huggingface.co/google/gemma-2b
16:06:05 [INFO] root: Linting=1.0, Typing=1.0, Tests=0.7, Maintainability=0.0
16:06:05 [INFO] src.orchestration.metric_orchestrator: Metric code_quality succeeded in 174 ms (url=https://huggingface.co/google/gemma-2b)
16:06:05 [DEBUG] src.orchestration.metric_orchestrator: Finished code_quality (latency=174 ms, error=False, url=https://huggingface.co/google/gemma-2b)
16:06:05 [DEBUG] src.orchestration.metric_orchestrator: Acquired slot for license (url=https://huggingface.co/google/gemma-2b)
16:06:05 [DEBUG] src.orchestration.metric_orchestrator: Starting metric license for url=https://huggingface.co/google/gemma-2b
16:06:05 [INFO] root: license_check: source=LICENSE, spdx_ids=['Apache-2.0'], hints=['apache license', 'apache'] => Explicit SPDX whitelist: Apache-2.0
16:06:05 [DEBUG] src.orchestration.metric_orchestrator: Acquired slot for dataset_quality (url=https://huggingface.co/google/gemma-2b)
16:06:05 [DEBUG] src.orchestration.metric_orchestrator: Starting metric dataset_quality for url=https://huggingface.co/google/gemma-2b
16:06:05 [INFO] root: dataset_quality: not a dataset
16:06:05 [INFO] src.orchestration.metric_orchestrator: Metric dataset_quality succeeded in 0 ms (url=https://huggingface.co/google/gemma-2b)
16:06:05 [DEBUG] src.orchestration.metric_orchestrator: Finished dataset_quality (latency=0 ms, error=False, url=https://huggingface.co/google/gemma-2b)
16:06:05 [DEBUG] src.orchestration.metric_orchestrator: Acquired slot for ramp_up_time (url=https://huggingface.co/google/gemma-2b)
16:06:05 [DEBUG] src.orchestration.metric_orchestrator: Starting metric ramp_up_time for url=https://huggingface.co/google/gemma-2b
16:06:05 [INFO] root: Repo README subscore: install=1.0, usage=1.0, desc=1.0, io=1.0, links=1.0 => 1.000
16:06:05 [DEBUG] root: TOTAL PATHS: 1911
16:06:05 [DEBUG] root: PATH: 'jax/_src/prng.py'
16:06:05 [DEBUG] root: PATH: 'tests/filecheck'
16:06:05 [DEBUG] root: PATH: 'jax/tools'
16:06:05 [DEBUG] root: PATH: 'docs/jax.example_libraries.stax.rst'
16:06:05 [DEBUG] root: PATH: 'jaxlib/triton/BUILD'
16:06:05 [DEBUG] root: PATH: 'tests/debug_info_test.py'
16:06:05 [DEBUG] root: PATH: 'docs/_static/distributed_data_loading/18.svg'
16:06:05 [DEBUG] root: PATH: 'docs/_static/mesh.jpg'
16:06:05 [DEBUG] root: PATH: 'docs/_static/device_memory_profile_leak2.svg'
16:06:05 [DEBUG] root: PATH: 'jax/_src/pallas/__init__.py'
16:06:05 [DEBUG] root: PATH: 'docs/export/index.rst'
16:06:05 [DEBUG] root: PATH: 'docs/jax.tree.rst'
16:06:05 [DEBUG] root: PATH: '.github/ISSUE_TEMPLATE/config.yml'
16:06:05 [DEBUG] root: PATH: 'nq_open/NQ-open.efficientqa.test.1.1.no-annotations.jsonl'
16:06:05 [DEBUG] root: PATH: 'jax/_src/pallas/mosaic_gpu/pipeline.py'
16:06:05 [DEBUG] root: PATH: 'ci/envs/docker.env'
16:06:05 [DEBUG] root: PATH: 'jax/memory.py'
16:06:05 [DEBUG] root: PATH: 'tests/custom_partitioning_sharding_rule_test.py'
16:06:05 [DEBUG] root: PATH: 'jaxlib/cpu/_sparse'
16:06:05 [DEBUG] root: PATH: 'docs/_static/multi_process'
16:06:05 [DEBUG] root: PATH: 'jax/experimental/pallas/ops/gpu/BUILD'
16:06:05 [DEBUG] root: PATH: 'jax/extend/mlir/dialects/memref.py'
16:06:05 [DEBUG] root: PATH: 'docs/jax.extend.mlir.rst'
16:06:05 [DEBUG] root: PATH: 'jax/_src/lib/mlir'
16:06:05 [DEBUG] root: PATH: 'jax/_src/tpu/__init__.py'
16:06:05 [INFO] root: Repo examples subscore: has_nb=True, has_ex=True, py_examples=42 => 0.700
16:06:05 [INFO] root: Repo manifest subscore: has_reqs=True, has_env=False, has_setup=True, has_pyproj=True, has_conda=False, has_docker=True, has_make=True, has_pipfile=False => 1.000
16:06:05 [INFO] src.orchestration.metric_orchestrator: Metric ramp_up_time succeeded in 10 ms (url=https://huggingface.co/google/gemma-2b)
16:06:05 [DEBUG] src.orchestration.metric_orchestrator: Finished ramp_up_time (latency=10 ms, error=False, url=https://huggingface.co/google/gemma-2b)
16:06:05 [DEBUG] src.orchestration.metric_orchestrator: Acquired slot for dataset_and_code_score (url=https://huggingface.co/google/gemma-2b)
16:06:05 [DEBUG] src.orchestration.metric_orchestrator: Starting metric dataset_and_code_score for url=https://huggingface.co/google/gemma-2b
16:06:05 [INFO] src.orchestration.metric_orchestrator: Metric dataset_and_code_score succeeded in 0 ms (url=https://huggingface.co/google/gemma-2b)
16:06:05 [DEBUG] src.orchestration.metric_orchestrator: Finished dataset_and_code_score (latency=0 ms, error=False, url=https://huggingface.co/google/gemma-2b)
16:06:05 [INFO] src.orchestration.metric_orchestrator: Metric license succeeded in 18 ms (url=https://huggingface.co/google/gemma-2b)
16:06:05 [DEBUG] src.orchestration.metric_orchestrator: Finished license (latency=18 ms, error=False, url=https://huggingface.co/google/gemma-2b)
16:06:05 [INFO] src.orchestration.metric_orchestrator: Orchestration finished in 12141 ms (success=7, failed=0, url=https://huggingface.co/google/gemma-2b)
16:06:05 [INFO] src.orchestration.metric_orchestrator: Starting orchestration with 7 metrics (limit=4, url=https://github.com/pallets/flask)
16:06:05 [DEBUG] src.orchestration.metric_orchestrator: Dispatched 7 tasks (url=https://github.com/pallets/flask)
16:06:05 [DEBUG] src.orchestration.metric_orchestrator: Acquired slot for performance_claims (url=https://github.com/pallets/flask)
16:06:05 [DEBUG] src.orchestration.metric_orchestrator: Starting metric performance_claims for url=https://github.com/pallets/flask
16:06:05 [INFO] root: Calling Purdue GenAI with prompt for performance metric:      Analyze the following README content for performance claims and evidence quality.       Look for:     1. Quantitative benchmark results (specific numbers, scores, metrics)     2. Comparisons with other models (with data)     3. Dataset evaluations and test results     4. Performance metrics (accuracy, F1, BLEU, etc.)     5. Subjective claims without evidence ("best in class", "state-of-the-art" without data)      Rate each type of claim on evidence quality and specificity.      README Conte...
16:06:05 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): genai.rcac.purdue.edu:443
16:06:08 [DEBUG] urllib3.connectionpool: https://genai.rcac.purdue.edu:443 "POST /api/chat/completions HTTP/1.1" 200 349
16:06:08 [INFO] root: Performance Metric -> Quality: 0.0, Specificity: 0.0, Total Claims: 0, Quantitative Claims: 0, Benchmark Count: 0, Has Tables/Charts: False
16:06:08 [INFO] src.orchestration.metric_orchestrator: Metric performance_claims succeeded in 3058 ms (url=https://github.com/pallets/flask)
16:06:08 [DEBUG] src.orchestration.metric_orchestrator: Finished performance_claims (latency=3058 ms, error=False, url=https://github.com/pallets/flask)
16:06:08 [DEBUG] src.orchestration.metric_orchestrator: Acquired slot for bus_factor (url=https://github.com/pallets/flask)
16:06:08 [DEBUG] src.orchestration.metric_orchestrator: Starting metric bus_factor for url=https://github.com/pallets/flask
16:06:08 [INFO] root: Bus Factor Metric -> contributors=100, top_share=0.39, score=0.78
16:06:08 [INFO] src.orchestration.metric_orchestrator: Metric bus_factor succeeded in 0 ms (url=https://github.com/pallets/flask)
16:06:08 [DEBUG] src.orchestration.metric_orchestrator: Finished bus_factor (latency=0 ms, error=False, url=https://github.com/pallets/flask)
16:06:08 [DEBUG] src.orchestration.metric_orchestrator: Acquired slot for code_quality (url=https://github.com/pallets/flask)
16:06:08 [DEBUG] src.orchestration.metric_orchestrator: Starting metric code_quality for url=https://github.com/pallets/flask
16:06:09 [INFO] root: Linting=1.0, Typing=1.0, Tests=0.7, Maintainability=0.0
16:06:09 [INFO] src.orchestration.metric_orchestrator: Metric code_quality succeeded in 183 ms (url=https://github.com/pallets/flask)
16:06:09 [DEBUG] src.orchestration.metric_orchestrator: Finished code_quality (latency=183 ms, error=False, url=https://github.com/pallets/flask)
16:06:09 [DEBUG] src.orchestration.metric_orchestrator: Acquired slot for license (url=https://github.com/pallets/flask)
16:06:09 [DEBUG] src.orchestration.metric_orchestrator: Starting metric license for url=https://github.com/pallets/flask
16:06:09 [DEBUG] src.orchestration.metric_orchestrator: Acquired slot for dataset_quality (url=https://github.com/pallets/flask)
16:06:09 [INFO] root: license_check: source=LICENSE, spdx_ids=['BSD-3-Clause'], hints=[] => Explicit SPDX whitelist: BSD-3-Clause
16:06:09 [DEBUG] src.orchestration.metric_orchestrator: Starting metric dataset_quality for url=https://github.com/pallets/flask
16:06:09 [WARNING] root: dataset_quality: no huggingface data available
16:06:09 [INFO] src.orchestration.metric_orchestrator: Metric dataset_quality succeeded in 0 ms (url=https://github.com/pallets/flask)
16:06:09 [DEBUG] src.orchestration.metric_orchestrator: Finished dataset_quality (latency=0 ms, error=False, url=https://github.com/pallets/flask)
16:06:09 [DEBUG] src.orchestration.metric_orchestrator: Acquired slot for ramp_up_time (url=https://github.com/pallets/flask)
16:06:09 [DEBUG] src.orchestration.metric_orchestrator: Starting metric ramp_up_time for url=https://github.com/pallets/flask
16:06:09 [INFO] root: Repo README subscore: install=0.0, usage=1.0, desc=0.0, io=1.0, links=1.0 => 0.600
16:06:09 [DEBUG] root: TOTAL PATHS: 285
16:06:09 [DEBUG] root: PATH: 'tests/test_logging.py'
16:06:09 [DEBUG] root: PATH: 'src/flask/templating.py'
16:06:09 [DEBUG] root: PATH: '.github/workflows/pre-commit.yaml'
16:06:09 [DEBUG] root: PATH: 'examples/javascript/tests/test_js_example.py'
16:06:09 [DEBUG] root: PATH: 'tests/test_apps/blueprintapp/apps/admin/templates'
16:06:09 [DEBUG] root: PATH: 'tests/test_apps/cliapp'
16:06:09 [DEBUG] root: PATH: '.github/ISSUE_TEMPLATE'
16:06:09 [DEBUG] root: PATH: 'examples/celery/README.md'
16:06:09 [DEBUG] root: PATH: 'tests/conftest.py'
16:06:09 [DEBUG] root: PATH: 'examples/celery'
16:06:09 [DEBUG] root: PATH: 'docs/tutorial/views.rst'
16:06:09 [DEBUG] root: PATH: 'examples/tutorial/README.rst'
16:06:09 [DEBUG] root: PATH: 'docs/errorhandling.rst'
16:06:09 [DEBUG] root: PATH: 'tests/type_check/typing_route.py'
16:06:09 [DEBUG] root: PATH: 'docs/deploying/waitress.rst'
16:06:09 [DEBUG] root: PATH: 'examples/tutorial/flaskr/templates'
16:06:09 [DEBUG] root: PATH: 'examples/celery/src/task_app/views.py'
16:06:09 [DEBUG] root: PATH: 'docs/tutorial/layout.rst'
16:06:09 [DEBUG] root: PATH: 'examples/tutorial/tests/test_blog.py'
16:06:09 [DEBUG] root: PATH: 'tests/test_apps/cliapp/message.txt'
16:06:09 [DEBUG] root: PATH: 'docs/Makefile'
16:06:09 [DEBUG] root: PATH: 'examples/tutorial/flaskr/templates/blog'
16:06:09 [DEBUG] root: PATH: 'docs/testing.rst'
16:06:09 [DEBUG] root: PATH: 'docs/shell.rst'
16:06:09 [DEBUG] root: PATH: 'tests/test_apps'
16:06:09 [INFO] root: Repo examples subscore: has_nb=True, has_ex=True, py_examples=17 => 0.700
16:06:09 [INFO] root: Repo manifest subscore: has_reqs=True, has_env=False, has_setup=False, has_pyproj=True, has_conda=False, has_docker=False, has_make=True, has_pipfile=False => 1.000
16:06:09 [INFO] src.orchestration.metric_orchestrator: Metric ramp_up_time succeeded in 8 ms (url=https://github.com/pallets/flask)
16:06:09 [DEBUG] src.orchestration.metric_orchestrator: Finished ramp_up_time (latency=8 ms, error=False, url=https://github.com/pallets/flask)
16:06:09 [DEBUG] src.orchestration.metric_orchestrator: Acquired slot for dataset_and_code_score (url=https://github.com/pallets/flask)
16:06:09 [DEBUG] src.orchestration.metric_orchestrator: Starting metric dataset_and_code_score for url=https://github.com/pallets/flask
16:06:09 [INFO] src.orchestration.metric_orchestrator: Metric dataset_and_code_score succeeded in 0 ms (url=https://github.com/pallets/flask)
16:06:09 [DEBUG] src.orchestration.metric_orchestrator: Finished dataset_and_code_score (latency=0 ms, error=False, url=https://github.com/pallets/flask)
16:06:09 [INFO] src.orchestration.metric_orchestrator: Metric license succeeded in 12 ms (url=https://github.com/pallets/flask)
16:06:09 [DEBUG] src.orchestration.metric_orchestrator: Finished license (latency=12 ms, error=False, url=https://github.com/pallets/flask)
16:06:09 [INFO] src.orchestration.metric_orchestrator: Orchestration finished in 3258 ms (success=7, failed=0, url=https://github.com/pallets/flask)
16:06:15 [DEBUG] asyncio: Using selector: EpollSelector
16:06:15 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): huggingface.co:443
16:06:16 [DEBUG] urllib3.connectionpool: https://huggingface.co:443 "GET /api/models/google/gemma-3-270m?blobs=True HTTP/1.1" 200 4462
16:06:16 [DEBUG] urllib3.connectionpool: https://huggingface.co:443 "HEAD /google/gemma-3-270m/resolve/main/README.md HTTP/1.1" 200 0
16:06:16 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): api.github.com:443
16:06:16 [DEBUG] urllib3.connectionpool: https://api.github.com:443 "GET /repos/google-deepmind/bbeh HTTP/1.1" 200 None
16:06:16 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): api.github.com:443
16:06:16 [DEBUG] urllib3.connectionpool: https://api.github.com:443 "GET /repos/google-deepmind/bbeh/readme HTTP/1.1" 200 None
16:06:16 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): api.github.com:443
16:06:17 [DEBUG] urllib3.connectionpool: https://api.github.com:443 "GET /repos/google-deepmind/bbeh/contributors?per_page=100&anon=1 HTTP/1.1" 200 None
16:06:17 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): api.github.com:443
16:06:17 [DEBUG] urllib3.connectionpool: https://api.github.com:443 "GET /repos/google-deepmind/bbeh/git/trees/main?recursive=1 HTTP/1.1" 200 None
16:06:17 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): api.github.com:443
16:06:17 [DEBUG] urllib3.connectionpool: https://api.github.com:443 "GET /repos/google-deepmind/bbeh/contents/LICENSE?ref=main HTTP/1.1" 200 None
16:06:17 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): api.github.com:443
16:06:17 [DEBUG] urllib3.connectionpool: https://api.github.com:443 "GET /repos/google-deepmind/bbeh/contents/README.md?ref=main HTTP/1.1" 200 None
16:06:17 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): api.github.com:443
16:06:17 [DEBUG] urllib3.connectionpool: https://api.github.com:443 "GET /repos/google-deepmind/bbeh/contents/bbeh/benchmark_tasks/bbeh_boardgame_qa/README.md?ref=main HTTP/1.1" 200 None
16:06:17 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): api.github.com:443
16:06:18 [DEBUG] urllib3.connectionpool: https://api.github.com:443 "GET /repos/google-deepmind/bbeh/contents/bbeh/benchmark_tasks/bbeh_boolean_expressions/README.md?ref=main HTTP/1.1" 200 None
16:06:18 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): api.github.com:443
16:06:18 [DEBUG] urllib3.connectionpool: https://api.github.com:443 "GET /repos/google-deepmind/bbeh/contents/bbeh/benchmark_tasks/bbeh_buggy_tables/README.md?ref=main HTTP/1.1" 200 None
16:06:18 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): api.github.com:443
16:06:18 [DEBUG] urllib3.connectionpool: https://api.github.com:443 "GET /repos/google-deepmind/bbeh/contents/bbeh/benchmark_tasks/bbeh_causal_understanding/README.md?ref=main HTTP/1.1" 200 None
16:06:18 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): api.github.com:443
16:06:18 [DEBUG] urllib3.connectionpool: https://api.github.com:443 "GET /repos/google-deepmind/bbeh/contents/bbeh/benchmark_tasks/bbeh_disambiguation_qa/README.md?ref=main HTTP/1.1" 200 None
16:06:18 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): api.github.com:443
16:06:19 [DEBUG] urllib3.connectionpool: https://api.github.com:443 "GET /repos/google-deepmind/bbeh/contents/bbeh/benchmark_tasks/bbeh_dyck_languages/README.md?ref=main HTTP/1.1" 200 None
16:06:19 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): api.github.com:443
16:06:19 [DEBUG] urllib3.connectionpool: https://api.github.com:443 "GET /repos/google-deepmind/bbeh/contents/bbeh/benchmark_tasks/bbeh_geometric_shapes/README.md?ref=main HTTP/1.1" 200 None
16:06:19 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): api.github.com:443
16:06:19 [DEBUG] urllib3.connectionpool: https://api.github.com:443 "GET /repos/google-deepmind/bbeh/contents/bbeh/benchmark_tasks/bbeh_hyperbaton/README.md?ref=main HTTP/1.1" 200 None
16:06:19 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): api.github.com:443
16:06:19 [DEBUG] urllib3.connectionpool: https://api.github.com:443 "GET /repos/google-deepmind/bbeh/contents/bbeh/benchmark_tasks/bbeh_linguini/README.md?ref=main HTTP/1.1" 200 None
16:06:19 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): api.github.com:443
16:06:19 [DEBUG] urllib3.connectionpool: https://api.github.com:443 "GET /repos/google-deepmind/bbeh/contents/bbeh/benchmark_tasks/bbeh_movie_recommendation/README.md?ref=main HTTP/1.1" 200 None
16:06:19 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): api.github.com:443
16:06:19 [DEBUG] urllib3.connectionpool: https://api.github.com:443 "GET /repos/google-deepmind/bbeh/contents/bbeh/benchmark_tasks/bbeh_multistep_arithmetic/README.md?ref=main HTTP/1.1" 200 None
16:06:19 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): api.github.com:443
16:06:20 [DEBUG] urllib3.connectionpool: https://api.github.com:443 "GET /repos/google-deepmind/bbeh/contents/bbeh/benchmark_tasks/bbeh_nycc/README.md?ref=main HTTP/1.1" 200 None
16:06:20 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): api.github.com:443
16:06:20 [DEBUG] urllib3.connectionpool: https://api.github.com:443 "GET /repos/google-deepmind/bbeh/contents/bbeh/benchmark_tasks/bbeh_object_counting/README.md?ref=main HTTP/1.1" 200 None
16:06:20 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): api.github.com:443
16:06:20 [DEBUG] urllib3.connectionpool: https://api.github.com:443 "GET /repos/google-deepmind/bbeh/contents/bbeh/benchmark_tasks/bbeh_object_properties/README.md?ref=main HTTP/1.1" 200 None
16:06:20 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): api.github.com:443
16:06:20 [DEBUG] urllib3.connectionpool: https://api.github.com:443 "GET /repos/google-deepmind/bbeh/contents/bbeh/benchmark_tasks/bbeh_sarc_triples/README.md?ref=main HTTP/1.1" 200 None
16:06:20 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): api.github.com:443
16:06:20 [DEBUG] urllib3.connectionpool: https://api.github.com:443 "GET /repos/google-deepmind/bbeh/contents/bbeh/benchmark_tasks/bbeh_shuffled_objects/README.md?ref=main HTTP/1.1" 200 None
16:06:20 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): api.github.com:443
16:06:21 [DEBUG] urllib3.connectionpool: https://api.github.com:443 "GET /repos/google-deepmind/bbeh/contents/bbeh/benchmark_tasks/bbeh_spatial_reasoning/README.md?ref=main HTTP/1.1" 200 None
16:06:21 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): api.github.com:443
16:06:21 [DEBUG] urllib3.connectionpool: https://api.github.com:443 "GET /repos/google-deepmind/bbeh/contents/bbeh/benchmark_tasks/bbeh_sportqa/README.md?ref=main HTTP/1.1" 200 None
16:06:21 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): api.github.com:443
16:06:21 [DEBUG] urllib3.connectionpool: https://api.github.com:443 "GET /repos/google-deepmind/bbeh/contents/bbeh/benchmark_tasks/bbeh_temporal_sequence/README.md?ref=main HTTP/1.1" 200 None
16:06:21 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): api.github.com:443
16:06:21 [DEBUG] urllib3.connectionpool: https://api.github.com:443 "GET /repos/google-deepmind/bbeh/contents/bbeh/benchmark_tasks/bbeh_time_arithmetic/README.md?ref=main HTTP/1.1" 200 None
16:06:21 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): api.github.com:443
16:06:21 [DEBUG] urllib3.connectionpool: https://api.github.com:443 "GET /repos/google-deepmind/bbeh/contents/bbeh/benchmark_tasks/bbeh_web_of_lies/README.md?ref=main HTTP/1.1" 200 None
16:06:21 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): api.github.com:443
16:06:22 [DEBUG] urllib3.connectionpool: https://api.github.com:443 "GET /repos/google-deepmind/bbeh/contents/bbeh/benchmark_tasks/bbeh_word_sorting/README.md?ref=main HTTP/1.1" 200 None
16:06:22 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): api.github.com:443
16:06:22 [DEBUG] urllib3.connectionpool: https://api.github.com:443 "GET /repos/google-deepmind/bbeh/contents/bbeh/benchmark_tasks/bbeh_zebra_puzzles/README.md?ref=main HTTP/1.1" 200 None
16:06:22 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): api.github.com:443
16:06:22 [DEBUG] urllib3.connectionpool: https://api.github.com:443 "GET /repos/google-research/big_vision HTTP/1.1" 200 None
16:06:22 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): api.github.com:443
16:06:23 [DEBUG] urllib3.connectionpool: https://api.github.com:443 "GET /repos/google-research/big_vision/readme HTTP/1.1" 200 None
16:06:23 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): api.github.com:443
16:06:23 [DEBUG] urllib3.connectionpool: https://api.github.com:443 "GET /repos/google-research/big_vision/contributors?per_page=100&anon=1 HTTP/1.1" 200 None
16:06:23 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): api.github.com:443
16:06:23 [DEBUG] urllib3.connectionpool: https://api.github.com:443 "GET /repos/google-research/big_vision/git/trees/main?recursive=1 HTTP/1.1" 200 None
16:06:23 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): api.github.com:443
16:06:23 [DEBUG] urllib3.connectionpool: https://api.github.com:443 "GET /repos/google-research/big_vision/contents/CONTRIBUTING.md?ref=main HTTP/1.1" 200 None
16:06:23 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): api.github.com:443
16:06:24 [DEBUG] urllib3.connectionpool: https://api.github.com:443 "GET /repos/google-research/big_vision/contents/LICENSE?ref=main HTTP/1.1" 200 None
16:06:24 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): api.github.com:443
16:06:24 [DEBUG] urllib3.connectionpool: https://api.github.com:443 "GET /repos/google-research/big_vision/contents/README.md?ref=main HTTP/1.1" 200 None
16:06:24 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): api.github.com:443
16:06:24 [DEBUG] urllib3.connectionpool: https://api.github.com:443 "GET /repos/google-research/big_vision/contents/big_vision/configs/proj/cappa/README.md?ref=main HTTP/1.1" 200 None
16:06:24 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): api.github.com:443
16:06:24 [DEBUG] urllib3.connectionpool: https://api.github.com:443 "GET /repos/google-research/big_vision/contents/big_vision/configs/proj/clippo/README.md?ref=main HTTP/1.1" 200 None
16:06:24 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): api.github.com:443
16:06:24 [DEBUG] urllib3.connectionpool: https://api.github.com:443 "GET /repos/google-research/big_vision/contents/big_vision/configs/proj/distill/README.md?ref=main HTTP/1.1" 200 None
16:06:24 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): api.github.com:443
16:06:25 [DEBUG] urllib3.connectionpool: https://api.github.com:443 "GET /repos/google-research/big_vision/contents/big_vision/configs/proj/flexivit/README.md?ref=main HTTP/1.1" 200 None
16:06:25 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): api.github.com:443
16:06:25 [DEBUG] urllib3.connectionpool: https://api.github.com:443 "GET /repos/google-research/big_vision/contents/big_vision/configs/proj/givt/README.md?ref=main HTTP/1.1" 200 None
16:06:25 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): api.github.com:443
16:06:25 [DEBUG] urllib3.connectionpool: https://api.github.com:443 "GET /repos/google-research/big_vision/contents/big_vision/configs/proj/image_text/README.md?ref=main HTTP/1.1" 200 None
16:06:25 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): api.github.com:443
16:06:25 [DEBUG] urllib3.connectionpool: https://api.github.com:443 "GET /repos/google-research/big_vision/contents/big_vision/configs/proj/image_text/README_lit.md?ref=main HTTP/1.1" 200 None
16:06:25 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): api.github.com:443
16:06:26 [DEBUG] urllib3.connectionpool: https://api.github.com:443 "GET /repos/google-research/big_vision/contents/big_vision/configs/proj/image_text/README_siglip2.md?ref=main HTTP/1.1" 200 None
16:06:26 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): api.github.com:443
16:06:26 [DEBUG] urllib3.connectionpool: https://api.github.com:443 "GET /repos/google-research/big_vision/contents/big_vision/configs/proj/jetformer/README.md?ref=main HTTP/1.1" 200 None
16:06:26 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): api.github.com:443
16:06:26 [DEBUG] urllib3.connectionpool: https://api.github.com:443 "GET /repos/google-research/big_vision/contents/big_vision/configs/proj/paligemma/README.md?ref=main HTTP/1.1" 200 None
16:06:26 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): api.github.com:443
16:06:26 [DEBUG] urllib3.connectionpool: https://api.github.com:443 "GET /repos/google-research/big_vision/contents/big_vision/configs/proj/uvim/README.md?ref=main HTTP/1.1" 200 None
16:06:26 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): api.github.com:443
16:06:26 [DEBUG] urllib3.connectionpool: https://api.github.com:443 "GET /repos/google-research/big_vision/contents/big_vision/tools/lit_demo/README.md?ref=main HTTP/1.1" 200 None
16:06:26 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): api.github.com:443
16:06:27 [DEBUG] urllib3.connectionpool: https://api.github.com:443 "GET /repos/jax-ml/jax HTTP/1.1" 200 None
16:06:27 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): api.github.com:443
16:06:27 [DEBUG] urllib3.connectionpool: https://api.github.com:443 "GET /repos/jax-ml/jax/readme HTTP/1.1" 200 None
16:06:27 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): api.github.com:443
16:06:27 [DEBUG] urllib3.connectionpool: https://api.github.com:443 "GET /repos/jax-ml/jax/contributors?per_page=100&anon=1 HTTP/1.1" 200 None
16:06:27 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): api.github.com:443
16:06:27 [DEBUG] urllib3.connectionpool: https://api.github.com:443 "GET /repos/jax-ml/jax/git/trees/main?recursive=1 HTTP/1.1" 200 None
16:06:28 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): api.github.com:443
16:06:28 [DEBUG] urllib3.connectionpool: https://api.github.com:443 "GET /repos/jax-ml/jax/contents/.github/ISSUE_TEMPLATE/Feature_request.md?ref=main HTTP/1.1" 200 None
16:06:28 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): api.github.com:443
16:06:28 [DEBUG] urllib3.connectionpool: https://api.github.com:443 "GET /repos/jax-ml/jax/contents/.github/workflows/README.md?ref=main HTTP/1.1" 200 None
16:06:28 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): api.github.com:443
16:06:28 [DEBUG] urllib3.connectionpool: https://api.github.com:443 "GET /repos/jax-ml/jax/contents/.github/workflows/self_hosted_runner_utils/README.md?ref=main HTTP/1.1" 200 None
16:06:28 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): api.github.com:443
16:06:28 [DEBUG] urllib3.connectionpool: https://api.github.com:443 "GET /repos/jax-ml/jax/contents/CHANGELOG.md?ref=main HTTP/1.1" 200 None
16:06:28 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): api.github.com:443
16:06:29 [DEBUG] urllib3.connectionpool: https://api.github.com:443 "GET /repos/jax-ml/jax/contents/CONTRIBUTING.md?ref=main HTTP/1.1" 200 None
16:06:29 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): api.github.com:443
16:06:29 [DEBUG] urllib3.connectionpool: https://api.github.com:443 "GET /repos/jax-ml/jax/contents/LICENSE?ref=main HTTP/1.1" 200 None
16:06:29 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): api.github.com:443
16:06:29 [DEBUG] urllib3.connectionpool: https://api.github.com:443 "GET /repos/jax-ml/jax/contents/README.md?ref=main HTTP/1.1" 200 None
16:06:29 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): api.github.com:443
16:06:29 [DEBUG] urllib3.connectionpool: https://api.github.com:443 "GET /repos/jax-ml/jax/contents/build/rocm/README.md?ref=main HTTP/1.1" 200 None
16:06:29 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): api.github.com:443
16:06:29 [DEBUG] urllib3.connectionpool: https://api.github.com:443 "GET /repos/jax-ml/jax/contents/ci/README.md?ref=main HTTP/1.1" 200 None
16:06:29 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): api.github.com:443
16:06:30 [DEBUG] urllib3.connectionpool: https://api.github.com:443 "GET /repos/jax-ml/jax/contents/ci/envs/README.md?ref=main HTTP/1.1" 200 None
16:06:30 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): api.github.com:443
16:06:30 [DEBUG] urllib3.connectionpool: https://api.github.com:443 "GET /repos/jax-ml/jax/contents/ci/utilities/README.md?ref=main HTTP/1.1" 200 None
16:06:30 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): api.github.com:443
16:06:30 [DEBUG] urllib3.connectionpool: https://api.github.com:443 "GET /repos/jax-ml/jax/contents/cloud_tpu_colabs/README.md?ref=main HTTP/1.1" 200 None
16:06:30 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): api.github.com:443
16:06:30 [DEBUG] urllib3.connectionpool: https://api.github.com:443 "GET /repos/jax-ml/jax/contents/docs/README.md?ref=main HTTP/1.1" 200 None
16:06:30 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): api.github.com:443
16:06:30 [DEBUG] urllib3.connectionpool: https://api.github.com:443 "GET /repos/jax-ml/jax/contents/docs/_tutorials/advanced-compilation.md?ref=main HTTP/1.1" 200 None
16:06:30 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): api.github.com:443
16:06:31 [DEBUG] urllib3.connectionpool: https://api.github.com:443 "GET /repos/jax-ml/jax/contents/docs/_tutorials/advanced-debugging.md?ref=main HTTP/1.1" 200 None
16:06:31 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): api.github.com:443
16:06:31 [DEBUG] urllib3.connectionpool: https://api.github.com:443 "GET /repos/jax-ml/jax/contents/docs/_tutorials/index.rst?ref=main HTTP/1.1" 200 None
16:06:31 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): api.github.com:443
16:06:31 [DEBUG] urllib3.connectionpool: https://api.github.com:443 "GET /repos/jax-ml/jax/contents/docs/_tutorials/parallelism.md?ref=main HTTP/1.1" 200 None
16:06:31 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): api.github.com:443
16:06:31 [DEBUG] urllib3.connectionpool: https://api.github.com:443 "GET /repos/jax-ml/jax/contents/docs/_tutorials/profiling-and-performance.md?ref=main HTTP/1.1" 200 1404
16:06:31 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): api.github.com:443
16:06:31 [DEBUG] urllib3.connectionpool: https://api.github.com:443 "GET /repos/jax-ml/jax/contents/docs/_tutorials/simple-neural-network.md?ref=main HTTP/1.1" 200 None
16:06:31 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): api.github.com:443
16:06:32 [DEBUG] urllib3.connectionpool: https://api.github.com:443 "GET /repos/jax-ml/jax/contents/docs/about.md?ref=main HTTP/1.1" 200 None
16:06:32 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): api.github.com:443
16:06:32 [DEBUG] urllib3.connectionpool: https://api.github.com:443 "GET /repos/jax-ml/jax/contents/docs/advanced-autodiff.md?ref=main HTTP/1.1" 200 None
16:06:32 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): api.github.com:443
16:06:32 [DEBUG] urllib3.connectionpool: https://api.github.com:443 "GET /repos/jax-ml/jax/contents/docs/advanced_guides.rst?ref=main HTTP/1.1" 200 None
16:06:32 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): api.github.com:443
16:06:32 [DEBUG] urllib3.connectionpool: https://api.github.com:443 "GET /repos/jax-ml/jax/contents/docs/aot.md?ref=main HTTP/1.1" 200 None
16:06:32 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): api.github.com:443
16:06:33 [DEBUG] urllib3.connectionpool: https://api.github.com:443 "GET /repos/jax-ml/jax/contents/docs/api_compatibility.md?ref=main HTTP/1.1" 200 None
16:06:33 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): api.github.com:443
16:06:33 [DEBUG] urllib3.connectionpool: https://api.github.com:443 "GET /repos/jax-ml/jax/contents/docs/array_refs.md?ref=main HTTP/1.1" 200 None
16:06:33 [DEBUG] asyncio: Using selector: EpollSelector
16:06:33 [INFO] src.orchestration.metric_orchestrator: Starting orchestration with 7 metrics (limit=4, url=https://huggingface.co/google/gemma-2b)
16:06:33 [DEBUG] src.orchestration.metric_orchestrator: Dispatched 7 tasks (url=https://huggingface.co/google/gemma-2b)
16:06:33 [DEBUG] src.orchestration.metric_orchestrator: Acquired slot for performance_claims (url=https://huggingface.co/google/gemma-2b)
16:06:33 [DEBUG] src.orchestration.metric_orchestrator: Starting metric performance_claims for url=https://huggingface.co/google/gemma-2b
16:06:33 [INFO] root: Calling Purdue GenAI with prompt for performance metric:      Analyze the following README content for performance claims and evidence quality.       Look for:     1. Quantitative benchmark results (specific numbers, scores, metrics)     2. Comparisons with other models (with data)     3. Dataset evaluations and test results     4. Performance metrics (accuracy, F1, BLEU, etc.)     5. Subjective claims without evidence ("best in class", "state-of-the-art" without data)      Rate each type of claim on evidence quality and specificity.      README Conte...
16:06:33 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): genai.rcac.purdue.edu:443
16:06:53 [DEBUG] urllib3.connectionpool: https://genai.rcac.purdue.edu:443 "POST /api/chat/completions HTTP/1.1" 200 760
16:06:53 [INFO] root: Performance Metric -> Quality: 1.0, Specificity: 1.0, Total Claims: 5, Quantitative Claims: 5, Benchmark Count: 5, Has Tables/Charts: True
16:06:53 [INFO] src.orchestration.metric_orchestrator: Metric performance_claims succeeded in 20117 ms (url=https://huggingface.co/google/gemma-2b)
16:06:53 [DEBUG] src.orchestration.metric_orchestrator: Finished performance_claims (latency=20117 ms, error=False, url=https://huggingface.co/google/gemma-2b)
16:06:53 [DEBUG] src.orchestration.metric_orchestrator: Acquired slot for bus_factor (url=https://huggingface.co/google/gemma-2b)
16:06:53 [DEBUG] src.orchestration.metric_orchestrator: Starting metric bus_factor for url=https://huggingface.co/google/gemma-2b
16:06:53 [INFO] root: Bus Factor Metric -> contributors=3, top_share=0.61, score=0.54
16:06:53 [INFO] src.orchestration.metric_orchestrator: Metric bus_factor succeeded in 0 ms (url=https://huggingface.co/google/gemma-2b)
16:06:53 [DEBUG] src.orchestration.metric_orchestrator: Finished bus_factor (latency=0 ms, error=False, url=https://huggingface.co/google/gemma-2b)
16:06:53 [DEBUG] src.orchestration.metric_orchestrator: Acquired slot for code_quality (url=https://huggingface.co/google/gemma-2b)
16:06:53 [DEBUG] src.orchestration.metric_orchestrator: Starting metric code_quality for url=https://huggingface.co/google/gemma-2b
16:06:53 [INFO] root: Linting=1.0, Typing=1.0, Tests=0.7, Maintainability=0.0
16:06:53 [INFO] src.orchestration.metric_orchestrator: Metric code_quality succeeded in 168 ms (url=https://huggingface.co/google/gemma-2b)
16:06:53 [DEBUG] src.orchestration.metric_orchestrator: Finished code_quality (latency=168 ms, error=False, url=https://huggingface.co/google/gemma-2b)
16:06:53 [DEBUG] src.orchestration.metric_orchestrator: Acquired slot for license (url=https://huggingface.co/google/gemma-2b)
16:06:53 [DEBUG] src.orchestration.metric_orchestrator: Starting metric license for url=https://huggingface.co/google/gemma-2b
16:06:53 [INFO] root: license_check: source=LICENSE, spdx_ids=['Apache-2.0'], hints=['apache license', 'apache'] => Explicit SPDX whitelist: Apache-2.0
16:06:53 [DEBUG] src.orchestration.metric_orchestrator: Acquired slot for dataset_quality (url=https://huggingface.co/google/gemma-2b)
16:06:53 [DEBUG] src.orchestration.metric_orchestrator: Starting metric dataset_quality for url=https://huggingface.co/google/gemma-2b
16:06:53 [INFO] root: dataset_quality: not a dataset
16:06:53 [INFO] src.orchestration.metric_orchestrator: Metric dataset_quality succeeded in 2 ms (url=https://huggingface.co/google/gemma-2b)
16:06:53 [DEBUG] src.orchestration.metric_orchestrator: Finished dataset_quality (latency=2 ms, error=False, url=https://huggingface.co/google/gemma-2b)
16:06:53 [DEBUG] src.orchestration.metric_orchestrator: Acquired slot for ramp_up_time (url=https://huggingface.co/google/gemma-2b)
16:06:53 [DEBUG] src.orchestration.metric_orchestrator: Starting metric ramp_up_time for url=https://huggingface.co/google/gemma-2b
16:06:53 [INFO] root: Repo README subscore: install=1.0, usage=1.0, desc=1.0, io=1.0, links=1.0 => 1.000
16:06:53 [DEBUG] root: TOTAL PATHS: 1911
16:06:53 [DEBUG] root: PATH: 'jax/_src/distributed.py'
16:06:53 [DEBUG] root: PATH: 'jax/_src/checkify.py'
16:06:53 [DEBUG] root: PATH: 'docs/_static/multi_process/controller_and_local_devices.png'
16:06:53 [DEBUG] root: PATH: 'cloud_tpu_colabs/JAX_NeurIPS_2020_demo.ipynb'
16:06:53 [DEBUG] root: PATH: 'docs/jit-compilation.md'
16:06:53 [DEBUG] root: PATH: 'jax/scipy/stats/vonmises.py'
16:06:53 [DEBUG] root: PATH: 'jax/custom_derivatives.py'
16:06:53 [DEBUG] root: PATH: 'docs/_static/distributed_data_loading/21.svg'
16:06:53 [DEBUG] root: PATH: 'third_party/xla'
16:06:53 [DEBUG] root: PATH: 'jaxlib/mosaic/gpu/serde.cc'
16:06:53 [DEBUG] root: PATH: 'jax/_src/numpy/lax_numpy.py'
16:06:53 [DEBUG] root: PATH: 'jax/_src/pallas/mosaic/random.py'
16:06:53 [DEBUG] root: PATH: 'jaxlib/mosaic/gpu/serde.h'
16:06:53 [DEBUG] root: PATH: 'tests/mock_gpu_test.py'
16:06:53 [DEBUG] root: PATH: 'build/collect-profile-requirements.txt'
16:06:53 [DEBUG] root: PATH: 'jax/_src/ops'
16:06:53 [DEBUG] root: PATH: 'tests'
16:06:53 [DEBUG] root: PATH: 'jax/experimental/mosaic/gpu/examples/flash_attention.py'
16:06:53 [DEBUG] root: PATH: 'jax/scipy/stats/cauchy.py'
16:06:53 [DEBUG] root: PATH: 'docs/ffi.ipynb'
16:06:53 [DEBUG] root: PATH: 'jax/_src/lib/mlir/__init__.py'
16:06:53 [DEBUG] root: PATH: 'jaxlib/mosaic/dialect/tpu/transforms/memory_space_specialization.cc'
16:06:53 [DEBUG] root: PATH: 'nq_open/NQ-open.efficientqa.dev.1.1.jsonl'
16:06:53 [DEBUG] root: PATH: '.github/workflows/tsan.yaml'
16:06:53 [DEBUG] root: PATH: 'jaxlib/mosaic/dialect/tpu/transforms/serde.cc'
16:06:53 [INFO] root: Repo examples subscore: has_nb=True, has_ex=True, py_examples=42 => 0.700
16:06:53 [INFO] root: Repo manifest subscore: has_reqs=True, has_env=False, has_setup=True, has_pyproj=True, has_conda=False, has_docker=True, has_make=True, has_pipfile=False => 1.000
16:06:53 [INFO] src.orchestration.metric_orchestrator: Metric ramp_up_time succeeded in 11 ms (url=https://huggingface.co/google/gemma-2b)
16:06:53 [DEBUG] src.orchestration.metric_orchestrator: Finished ramp_up_time (latency=11 ms, error=False, url=https://huggingface.co/google/gemma-2b)
16:06:53 [DEBUG] src.orchestration.metric_orchestrator: Acquired slot for dataset_and_code_score (url=https://huggingface.co/google/gemma-2b)
16:06:53 [DEBUG] src.orchestration.metric_orchestrator: Starting metric dataset_and_code_score for url=https://huggingface.co/google/gemma-2b
16:06:53 [INFO] src.orchestration.metric_orchestrator: Metric dataset_and_code_score succeeded in 0 ms (url=https://huggingface.co/google/gemma-2b)
16:06:53 [DEBUG] src.orchestration.metric_orchestrator: Finished dataset_and_code_score (latency=0 ms, error=False, url=https://huggingface.co/google/gemma-2b)
16:06:53 [INFO] src.orchestration.metric_orchestrator: Metric license succeeded in 21 ms (url=https://huggingface.co/google/gemma-2b)
16:06:53 [DEBUG] src.orchestration.metric_orchestrator: Finished license (latency=21 ms, error=False, url=https://huggingface.co/google/gemma-2b)
16:06:53 [INFO] src.orchestration.metric_orchestrator: Orchestration finished in 20312 ms (success=7, failed=0, url=https://huggingface.co/google/gemma-2b)
16:06:53 [INFO] src.orchestration.metric_orchestrator: Starting orchestration with 7 metrics (limit=4, url=https://github.com/pallets/flask)
16:06:53 [DEBUG] src.orchestration.metric_orchestrator: Dispatched 7 tasks (url=https://github.com/pallets/flask)
16:06:53 [DEBUG] src.orchestration.metric_orchestrator: Acquired slot for performance_claims (url=https://github.com/pallets/flask)
16:06:53 [DEBUG] src.orchestration.metric_orchestrator: Starting metric performance_claims for url=https://github.com/pallets/flask
16:06:53 [INFO] root: Calling Purdue GenAI with prompt for performance metric:      Analyze the following README content for performance claims and evidence quality.       Look for:     1. Quantitative benchmark results (specific numbers, scores, metrics)     2. Comparisons with other models (with data)     3. Dataset evaluations and test results     4. Performance metrics (accuracy, F1, BLEU, etc.)     5. Subjective claims without evidence ("best in class", "state-of-the-art" without data)      Rate each type of claim on evidence quality and specificity.      README Conte...
16:06:53 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): genai.rcac.purdue.edu:443
16:06:56 [DEBUG] urllib3.connectionpool: https://genai.rcac.purdue.edu:443 "POST /api/chat/completions HTTP/1.1" 200 351
16:06:56 [INFO] root: Performance Metric -> Quality: 0.0, Specificity: 0.0, Total Claims: 0, Quantitative Claims: 0, Benchmark Count: 0, Has Tables/Charts: False
16:06:56 [INFO] src.orchestration.metric_orchestrator: Metric performance_claims succeeded in 3093 ms (url=https://github.com/pallets/flask)
16:06:56 [DEBUG] src.orchestration.metric_orchestrator: Finished performance_claims (latency=3093 ms, error=False, url=https://github.com/pallets/flask)
16:06:56 [DEBUG] src.orchestration.metric_orchestrator: Acquired slot for bus_factor (url=https://github.com/pallets/flask)
16:06:56 [DEBUG] src.orchestration.metric_orchestrator: Starting metric bus_factor for url=https://github.com/pallets/flask
16:06:56 [INFO] root: Bus Factor Metric -> contributors=100, top_share=0.39, score=0.78
16:06:56 [INFO] src.orchestration.metric_orchestrator: Metric bus_factor succeeded in 0 ms (url=https://github.com/pallets/flask)
16:06:56 [DEBUG] src.orchestration.metric_orchestrator: Finished bus_factor (latency=0 ms, error=False, url=https://github.com/pallets/flask)
16:06:56 [DEBUG] src.orchestration.metric_orchestrator: Acquired slot for code_quality (url=https://github.com/pallets/flask)
16:06:56 [DEBUG] src.orchestration.metric_orchestrator: Starting metric code_quality for url=https://github.com/pallets/flask
16:06:56 [INFO] root: Linting=1.0, Typing=1.0, Tests=0.7, Maintainability=0.0
16:06:56 [INFO] src.orchestration.metric_orchestrator: Metric code_quality succeeded in 172 ms (url=https://github.com/pallets/flask)
16:06:56 [DEBUG] src.orchestration.metric_orchestrator: Finished code_quality (latency=172 ms, error=False, url=https://github.com/pallets/flask)
16:06:56 [DEBUG] src.orchestration.metric_orchestrator: Acquired slot for license (url=https://github.com/pallets/flask)
16:06:56 [DEBUG] src.orchestration.metric_orchestrator: Starting metric license for url=https://github.com/pallets/flask
16:06:56 [DEBUG] src.orchestration.metric_orchestrator: Acquired slot for dataset_quality (url=https://github.com/pallets/flask)
16:06:56 [INFO] root: license_check: source=LICENSE, spdx_ids=['BSD-3-Clause'], hints=[] => Explicit SPDX whitelist: BSD-3-Clause
16:06:56 [DEBUG] src.orchestration.metric_orchestrator: Starting metric dataset_quality for url=https://github.com/pallets/flask
16:06:56 [WARNING] root: dataset_quality: no huggingface data available
16:06:56 [INFO] src.orchestration.metric_orchestrator: Metric dataset_quality succeeded in 0 ms (url=https://github.com/pallets/flask)
16:06:56 [DEBUG] src.orchestration.metric_orchestrator: Finished dataset_quality (latency=0 ms, error=False, url=https://github.com/pallets/flask)
16:06:56 [DEBUG] src.orchestration.metric_orchestrator: Acquired slot for ramp_up_time (url=https://github.com/pallets/flask)
16:06:56 [DEBUG] src.orchestration.metric_orchestrator: Starting metric ramp_up_time for url=https://github.com/pallets/flask
16:06:56 [INFO] root: Repo README subscore: install=0.0, usage=1.0, desc=0.0, io=1.0, links=1.0 => 0.600
16:06:56 [DEBUG] root: TOTAL PATHS: 285
16:06:56 [DEBUG] root: PATH: 'docs/patterns/favicon.rst'
16:06:56 [DEBUG] root: PATH: 'docs/Makefile'
16:06:56 [DEBUG] root: PATH: 'src/flask/templating.py'
16:06:56 [DEBUG] root: PATH: 'docs/patterns/javascript.rst'
16:06:56 [DEBUG] root: PATH: 'docs/tutorial/tests.rst'
16:06:56 [DEBUG] root: PATH: 'docs/appcontext.rst'
16:06:56 [DEBUG] root: PATH: 'examples/javascript/js_example/templates/xhr.html'
16:06:56 [DEBUG] root: PATH: 'examples/celery/requirements.txt'
16:06:56 [DEBUG] root: PATH: '.readthedocs.yaml'
16:06:56 [DEBUG] root: PATH: 'docs/contributing.rst'
16:06:56 [DEBUG] root: PATH: 'tests/type_check'
16:06:56 [DEBUG] root: PATH: 'docs/patterns/caching.rst'
16:06:56 [DEBUG] root: PATH: 'examples/tutorial/flaskr/auth.py'
16:06:56 [DEBUG] root: PATH: 'examples/celery/src/task_app/views.py'
16:06:56 [DEBUG] root: PATH: 'docs/tutorial/templates.rst'
16:06:56 [DEBUG] root: PATH: 'examples/tutorial/LICENSE.txt'
16:06:56 [DEBUG] root: PATH: '.github/workflows/tests.yaml'
16:06:56 [DEBUG] root: PATH: 'docs/tutorial/flaskr_edit.png'
16:06:56 [DEBUG] root: PATH: 'docs/patterns/deferredcallbacks.rst'
16:06:56 [DEBUG] root: PATH: 'tests/templates/mail.txt'
16:06:56 [DEBUG] root: PATH: 'docs/deploying/asgi.rst'
16:06:56 [DEBUG] root: PATH: 'examples/celery/pyproject.toml'
16:06:56 [DEBUG] root: PATH: 'src'
16:06:56 [DEBUG] root: PATH: 'examples/tutorial/tests/test_factory.py'
16:06:56 [DEBUG] root: PATH: 'docs/tutorial/index.rst'
16:06:56 [INFO] root: Repo examples subscore: has_nb=True, has_ex=True, py_examples=17 => 0.700
16:06:56 [INFO] root: Repo manifest subscore: has_reqs=True, has_env=False, has_setup=False, has_pyproj=True, has_conda=False, has_docker=False, has_make=True, has_pipfile=False => 1.000
16:06:56 [INFO] src.orchestration.metric_orchestrator: Metric ramp_up_time succeeded in 7 ms (url=https://github.com/pallets/flask)
16:06:56 [DEBUG] src.orchestration.metric_orchestrator: Finished ramp_up_time (latency=7 ms, error=False, url=https://github.com/pallets/flask)
16:06:56 [DEBUG] src.orchestration.metric_orchestrator: Acquired slot for dataset_and_code_score (url=https://github.com/pallets/flask)
16:06:56 [DEBUG] src.orchestration.metric_orchestrator: Starting metric dataset_and_code_score for url=https://github.com/pallets/flask
16:06:56 [INFO] src.orchestration.metric_orchestrator: Metric dataset_and_code_score succeeded in 0 ms (url=https://github.com/pallets/flask)
16:06:56 [DEBUG] src.orchestration.metric_orchestrator: Finished dataset_and_code_score (latency=0 ms, error=False, url=https://github.com/pallets/flask)
16:06:56 [INFO] src.orchestration.metric_orchestrator: Metric license succeeded in 12 ms (url=https://github.com/pallets/flask)
16:06:56 [DEBUG] src.orchestration.metric_orchestrator: Finished license (latency=12 ms, error=False, url=https://github.com/pallets/flask)
16:06:56 [INFO] src.orchestration.metric_orchestrator: Orchestration finished in 3281 ms (success=7, failed=0, url=https://github.com/pallets/flask)
16:06:56 [INFO] src.orchestration.metric_orchestrator: Starting orchestration with 7 metrics (limit=4, url=https://huggingface.co/google/gemma-3-270m)
16:06:56 [DEBUG] src.orchestration.metric_orchestrator: Dispatched 7 tasks (url=https://huggingface.co/google/gemma-3-270m)
16:06:56 [DEBUG] src.orchestration.metric_orchestrator: Acquired slot for performance_claims (url=https://huggingface.co/google/gemma-3-270m)
16:06:56 [DEBUG] src.orchestration.metric_orchestrator: Starting metric performance_claims for url=https://huggingface.co/google/gemma-3-270m
16:06:56 [INFO] root: Calling Purdue GenAI with prompt for performance metric:      Analyze the following README content for performance claims and evidence quality.       Look for:     1. Quantitative benchmark results (specific numbers, scores, metrics)     2. Comparisons with other models (with data)     3. Dataset evaluations and test results     4. Performance metrics (accuracy, F1, BLEU, etc.)     5. Subjective claims without evidence ("best in class", "state-of-the-art" without data)      Rate each type of claim on evidence quality and specificity.      README Conte...
16:06:56 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): genai.rcac.purdue.edu:443
16:07:11 [DEBUG] urllib3.connectionpool: https://genai.rcac.purdue.edu:443 "POST /api/chat/completions HTTP/1.1" 200 724
16:07:11 [INFO] root: Performance Metric -> Quality: 0.67, Specificity: 0.6, Total Claims: 3, Quantitative Claims: 0, Benchmark Count: 2, Has Tables/Charts: False
16:07:11 [INFO] src.orchestration.metric_orchestrator: Metric performance_claims succeeded in 14248 ms (url=https://huggingface.co/google/gemma-3-270m)
16:07:11 [DEBUG] src.orchestration.metric_orchestrator: Finished performance_claims (latency=14248 ms, error=False, url=https://huggingface.co/google/gemma-3-270m)
16:07:11 [DEBUG] src.orchestration.metric_orchestrator: Acquired slot for bus_factor (url=https://huggingface.co/google/gemma-3-270m)
16:07:11 [DEBUG] src.orchestration.metric_orchestrator: Starting metric bus_factor for url=https://huggingface.co/google/gemma-3-270m
16:07:11 [INFO] root: Bus Factor Metric -> contributors=2, top_share=0.80, score=0.25
16:07:11 [INFO] src.orchestration.metric_orchestrator: Metric bus_factor succeeded in 0 ms (url=https://huggingface.co/google/gemma-3-270m)
16:07:11 [DEBUG] src.orchestration.metric_orchestrator: Finished bus_factor (latency=0 ms, error=False, url=https://huggingface.co/google/gemma-3-270m)
16:07:11 [DEBUG] src.orchestration.metric_orchestrator: Acquired slot for code_quality (url=https://huggingface.co/google/gemma-3-270m)
16:07:11 [DEBUG] src.orchestration.metric_orchestrator: Starting metric code_quality for url=https://huggingface.co/google/gemma-3-270m
16:07:11 [INFO] root: Linting=1.0, Typing=1.0, Tests=0.7, Maintainability=0.0
16:07:11 [INFO] src.orchestration.metric_orchestrator: Metric code_quality succeeded in 164 ms (url=https://huggingface.co/google/gemma-3-270m)
16:07:11 [DEBUG] src.orchestration.metric_orchestrator: Finished code_quality (latency=164 ms, error=False, url=https://huggingface.co/google/gemma-3-270m)
16:07:11 [DEBUG] src.orchestration.metric_orchestrator: Acquired slot for license (url=https://huggingface.co/google/gemma-3-270m)
16:07:11 [DEBUG] src.orchestration.metric_orchestrator: Starting metric license for url=https://huggingface.co/google/gemma-3-270m
16:07:11 [DEBUG] src.orchestration.metric_orchestrator: Acquired slot for dataset_quality (url=https://huggingface.co/google/gemma-3-270m)
16:07:11 [DEBUG] src.orchestration.metric_orchestrator: Starting metric dataset_quality for url=https://huggingface.co/google/gemma-3-270m
16:07:11 [INFO] root: dataset_quality: not a dataset
16:07:11 [INFO] root: license_check: source=LICENSE, spdx_ids=['CC', 'CC0'], hints=['apache license', 'apache', 'cc0'] => Unknown license: CC
16:07:11 [INFO] src.orchestration.metric_orchestrator: Metric dataset_quality succeeded in 6 ms (url=https://huggingface.co/google/gemma-3-270m)
16:07:11 [DEBUG] src.orchestration.metric_orchestrator: Finished dataset_quality (latency=6 ms, error=False, url=https://huggingface.co/google/gemma-3-270m)
16:07:11 [DEBUG] src.orchestration.metric_orchestrator: Acquired slot for ramp_up_time (url=https://huggingface.co/google/gemma-3-270m)
16:07:11 [DEBUG] src.orchestration.metric_orchestrator: Starting metric ramp_up_time for url=https://huggingface.co/google/gemma-3-270m
16:07:11 [INFO] root: Repo README subscore: install=0.0, usage=1.0, desc=1.0, io=1.0, links=1.0 => 0.750
16:07:11 [DEBUG] root: TOTAL PATHS: 2401
16:07:11 [DEBUG] root: PATH: 'jax/_src/distributed.py'
16:07:11 [DEBUG] root: PATH: 'jax/_src/checkify.py'
16:07:11 [DEBUG] root: PATH: 'docs/_static/multi_process/controller_and_local_devices.png'
16:07:11 [DEBUG] root: PATH: 'bbeh/benchmark_tasks/bbeh_web_of_lies/README.md'
16:07:11 [DEBUG] root: PATH: 'cloud_tpu_colabs/JAX_NeurIPS_2020_demo.ipynb'
16:07:11 [DEBUG] root: PATH: 'docs/jit-compilation.md'
16:07:11 [DEBUG] root: PATH: 'jax/scipy/stats/vonmises.py'
16:07:11 [DEBUG] root: PATH: 'jax/custom_derivatives.py'
16:07:11 [DEBUG] root: PATH: 'docs/_static/distributed_data_loading/21.svg'
16:07:11 [DEBUG] root: PATH: 'third_party/xla'
16:07:11 [DEBUG] root: PATH: 'jaxlib/mosaic/gpu/serde.cc'
16:07:11 [DEBUG] root: PATH: 'jax/_src/numpy/lax_numpy.py'
16:07:11 [DEBUG] root: PATH: 'jax/_src/pallas/mosaic/random.py'
16:07:11 [DEBUG] root: PATH: 'jaxlib/mosaic/gpu/serde.h'
16:07:11 [DEBUG] root: PATH: 'tests/mock_gpu_test.py'
16:07:11 [DEBUG] root: PATH: 'build/collect-profile-requirements.txt'
16:07:11 [DEBUG] root: PATH: 'jax/_src/ops'
16:07:11 [DEBUG] root: PATH: 'tests'
16:07:11 [DEBUG] root: PATH: 'big_vision/pp'
16:07:11 [DEBUG] root: PATH: 'big_vision/configs/proj/paligemma/transfers/aokvqa_da.py'
16:07:11 [DEBUG] root: PATH: 'big_vision/models/proj/image_text/naflex_vit.py'
16:07:11 [DEBUG] root: PATH: 'jax/experimental/mosaic/gpu/examples/flash_attention.py'
16:07:11 [DEBUG] root: PATH: 'big_vision/evaluators/proj/cappa/perplexity.py'
16:07:11 [DEBUG] root: PATH: 'docs/ffi.ipynb'
16:07:11 [DEBUG] root: PATH: 'jax/scipy/stats/cauchy.py'
16:07:11 [INFO] root: Repo examples subscore: has_nb=True, has_ex=True, py_examples=42 => 0.700
16:07:11 [INFO] root: Repo manifest subscore: has_reqs=True, has_env=False, has_setup=True, has_pyproj=True, has_conda=False, has_docker=True, has_make=True, has_pipfile=False => 1.000
16:07:11 [INFO] src.orchestration.metric_orchestrator: Metric ramp_up_time succeeded in 9 ms (url=https://huggingface.co/google/gemma-3-270m)
16:07:11 [DEBUG] src.orchestration.metric_orchestrator: Finished ramp_up_time (latency=9 ms, error=False, url=https://huggingface.co/google/gemma-3-270m)
16:07:11 [DEBUG] src.orchestration.metric_orchestrator: Acquired slot for dataset_and_code_score (url=https://huggingface.co/google/gemma-3-270m)
16:07:11 [DEBUG] src.orchestration.metric_orchestrator: Starting metric dataset_and_code_score for url=https://huggingface.co/google/gemma-3-270m
16:07:11 [INFO] src.orchestration.metric_orchestrator: Metric dataset_and_code_score succeeded in 0 ms (url=https://huggingface.co/google/gemma-3-270m)
16:07:11 [DEBUG] src.orchestration.metric_orchestrator: Finished dataset_and_code_score (latency=0 ms, error=False, url=https://huggingface.co/google/gemma-3-270m)
16:07:11 [INFO] src.orchestration.metric_orchestrator: Metric license succeeded in 24 ms (url=https://huggingface.co/google/gemma-3-270m)
16:07:11 [DEBUG] src.orchestration.metric_orchestrator: Finished license (latency=24 ms, error=False, url=https://huggingface.co/google/gemma-3-270m)
16:07:11 [INFO] src.orchestration.metric_orchestrator: Orchestration finished in 14441 ms (success=7, failed=0, url=https://huggingface.co/google/gemma-3-270m)
16:07:36 [DEBUG] asyncio: Using selector: EpollSelector
16:07:36 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): huggingface.co:443
16:07:36 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): api.github.com:443
16:07:36 [DEBUG] urllib3.connectionpool: https://api.github.com:443 "GET /repos/SkyworkAI/Matrix-Game HTTP/1.1" 200 None
16:07:36 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): api.github.com:443
16:07:36 [DEBUG] urllib3.connectionpool: https://huggingface.co:443 "GET /api/datasets/xlangai/AgentNet?blobs=True HTTP/1.1" 200 10688
16:07:36 [DEBUG] urllib3.connectionpool: https://huggingface.co:443 "HEAD /xlangai/AgentNet/resolve/main/README.md HTTP/1.1" 401 0
16:07:36 [DEBUG] urllib3.connectionpool: https://api.github.com:443 "GET /repos/SkyworkAI/Matrix-Game/readme HTTP/1.1" 200 None
16:07:36 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): api.github.com:443
16:07:37 [DEBUG] urllib3.connectionpool: https://api.github.com:443 "GET /repos/SkyworkAI/Matrix-Game/contributors?per_page=100&anon=1 HTTP/1.1" 200 None
16:07:37 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): api.github.com:443
16:07:37 [DEBUG] urllib3.connectionpool: https://api.github.com:443 "GET /repos/SkyworkAI/Matrix-Game/git/trees/main?recursive=1 HTTP/1.1" 200 None
16:07:37 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): api.github.com:443
16:07:37 [DEBUG] urllib3.connectionpool: https://api.github.com:443 "GET /repos/SkyworkAI/Matrix-Game/contents/LICENSE?ref=main HTTP/1.1" 200 None
16:07:37 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): api.github.com:443
16:07:37 [DEBUG] urllib3.connectionpool: https://api.github.com:443 "GET /repos/SkyworkAI/Matrix-Game/contents/Matrix-Game-1/GameWorldScore/GameWorld/third_party/DROID-SLAM/README.md?ref=main HTTP/1.1" 200 None
16:07:37 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): api.github.com:443
16:07:37 [DEBUG] urllib3.connectionpool: https://api.github.com:443 "GET /repos/SkyworkAI/Matrix-Game/contents/Matrix-Game-1/GameWorldScore/GameWorld/third_party/DROID-SLAM/thirdparty/eigen/.gitlab/issue_templates/Bug%20Report.md?ref=main HTTP/1.1" 200 None
16:07:37 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): api.github.com:443
16:07:38 [DEBUG] urllib3.connectionpool: https://api.github.com:443 "GET /repos/SkyworkAI/Matrix-Game/contents/Matrix-Game-1/GameWorldScore/GameWorld/third_party/DROID-SLAM/thirdparty/eigen/.gitlab/issue_templates/Feature%20Request.md?ref=main HTTP/1.1" 200 None
16:07:38 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): api.github.com:443
16:07:38 [DEBUG] urllib3.connectionpool: https://api.github.com:443 "GET /repos/SkyworkAI/Matrix-Game/contents/Matrix-Game-1/GameWorldScore/GameWorld/third_party/DROID-SLAM/thirdparty/eigen/.gitlab/merge_request_templates/Merge%20Request%20Template.md?ref=main HTTP/1.1" 200 None
16:07:38 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): api.github.com:443
16:07:38 [DEBUG] urllib3.connectionpool: https://api.github.com:443 "GET /repos/SkyworkAI/Matrix-Game/contents/Matrix-Game-1/GameWorldScore/GameWorld/third_party/DROID-SLAM/thirdparty/eigen/README.md?ref=main HTTP/1.1" 200 None
16:07:38 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): api.github.com:443
16:07:38 [DEBUG] urllib3.connectionpool: https://api.github.com:443 "GET /repos/SkyworkAI/Matrix-Game/contents/Matrix-Game-1/GameWorldScore/GameWorld/third_party/DROID-SLAM/thirdparty/eigen/ci/README.md?ref=main HTTP/1.1" 200 None
16:07:38 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): api.github.com:443
16:07:38 [DEBUG] urllib3.connectionpool: https://api.github.com:443 "GET /repos/SkyworkAI/Matrix-Game/contents/Matrix-Game-1/GameWorldScore/GameWorld/third_party/DROID-SLAM/thirdparty/eigen/unsupported/Eigen/CXX11/src/Tensor/README.md?ref=main HTTP/1.1" 200 None
16:07:38 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): api.github.com:443
16:07:38 [DEBUG] urllib3.connectionpool: https://api.github.com:443 "GET /repos/SkyworkAI/Matrix-Game/contents/Matrix-Game-1/GameWorldScore/GameWorld/third_party/DROID-SLAM/thirdparty/lietorch/README.md?ref=main HTTP/1.1" 200 None
16:07:38 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): api.github.com:443
16:07:39 [DEBUG] urllib3.connectionpool: https://api.github.com:443 "GET /repos/SkyworkAI/Matrix-Game/contents/Matrix-Game-1/GameWorldScore/GameWorld/third_party/DROID-SLAM/thirdparty/lietorch/examples/pgo/readme.md?ref=main HTTP/1.1" 200 None
16:07:39 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): api.github.com:443
16:07:39 [DEBUG] urllib3.connectionpool: https://api.github.com:443 "GET /repos/SkyworkAI/Matrix-Game/contents/Matrix-Game-1/GameWorldScore/GameWorld/third_party/DROID-SLAM/thirdparty/lietorch/examples/readme.md?ref=main HTTP/1.1" 200 None
16:07:39 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): api.github.com:443
16:07:39 [DEBUG] urllib3.connectionpool: https://api.github.com:443 "GET /repos/SkyworkAI/Matrix-Game/contents/Matrix-Game-1/GameWorldScore/GameWorld/third_party/DROID-SLAM/thirdparty/lietorch/examples/registration/readme.md?ref=main HTTP/1.1" 200 None
16:07:39 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): api.github.com:443
16:07:39 [DEBUG] urllib3.connectionpool: https://api.github.com:443 "GET /repos/SkyworkAI/Matrix-Game/contents/Matrix-Game-1/GameWorldScore/GameWorld/third_party/DROID-SLAM/thirdparty/lietorch/examples/rgbdslam/readme.md?ref=main HTTP/1.1" 200 None
16:07:39 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): api.github.com:443
16:07:39 [DEBUG] urllib3.connectionpool: https://api.github.com:443 "GET /repos/SkyworkAI/Matrix-Game/contents/Matrix-Game-1/GameWorldScore/GameWorld/third_party/DROID-SLAM/thirdparty/tartanair_tools/README.md?ref=main HTTP/1.1" 200 None
16:07:39 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): api.github.com:443
16:07:39 [DEBUG] urllib3.connectionpool: https://api.github.com:443 "GET /repos/SkyworkAI/Matrix-Game/contents/Matrix-Game-1/GameWorldScore/GameWorld/third_party/DROID-SLAM/thirdparty/tartanair_tools/data_type.md?ref=main HTTP/1.1" 200 None
16:07:39 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): api.github.com:443
16:07:40 [DEBUG] urllib3.connectionpool: https://api.github.com:443 "GET /repos/SkyworkAI/Matrix-Game/contents/Matrix-Game-1/GameWorldScore/GameWorld/third_party/RAFT/README.md?ref=main HTTP/1.1" 200 None
16:07:40 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): api.github.com:443
16:07:40 [DEBUG] urllib3.connectionpool: https://api.github.com:443 "GET /repos/SkyworkAI/Matrix-Game/contents/Matrix-Game-1/GameWorldScore/GameWorld/third_party/amt/README.md?ref=main HTTP/1.1" 200 None
16:07:40 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): api.github.com:443
16:07:40 [DEBUG] urllib3.connectionpool: https://api.github.com:443 "GET /repos/SkyworkAI/Matrix-Game/contents/Matrix-Game-1/GameWorldScore/GameWorld/third_party/amt/docs/develop.md?ref=main HTTP/1.1" 200 None
16:07:40 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): api.github.com:443
16:07:40 [DEBUG] urllib3.connectionpool: https://api.github.com:443 "GET /repos/SkyworkAI/Matrix-Game/contents/Matrix-Game-1/GameWorldScore/GameWorld/third_party/amt/docs/method.md?ref=main HTTP/1.1" 200 None
16:07:40 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): api.github.com:443
16:07:40 [DEBUG] urllib3.connectionpool: https://api.github.com:443 "GET /repos/SkyworkAI/Matrix-Game/contents/Matrix-Game-1/GameWorldScore/GameWorld/third_party/amt/flow_generation/liteflownet/README.md?ref=main HTTP/1.1" 200 None
16:07:40 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): api.github.com:443
16:07:41 [DEBUG] urllib3.connectionpool: https://api.github.com:443 "GET /repos/SkyworkAI/Matrix-Game/contents/Matrix-Game-1/GameWorldScore/GameWorld/third_party/amt/flow_generation/liteflownet/correlation/README.md?ref=main HTTP/1.1" 200 None
16:07:41 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): api.github.com:443
16:07:41 [DEBUG] urllib3.connectionpool: https://api.github.com:443 "GET /repos/SkyworkAI/Matrix-Game/contents/Matrix-Game-1/GameWorldScore/README.md?ref=main HTTP/1.1" 200 None
16:07:41 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): api.github.com:443
16:07:41 [DEBUG] urllib3.connectionpool: https://api.github.com:443 "GET /repos/SkyworkAI/Matrix-Game/contents/Matrix-Game-1/GameWorldScore/submodules/README.md?ref=main HTTP/1.1" 200 None
16:07:41 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): api.github.com:443
16:07:41 [DEBUG] urllib3.connectionpool: https://api.github.com:443 "GET /repos/SkyworkAI/Matrix-Game/contents/Matrix-Game-1/README.md?ref=main HTTP/1.1" 200 None
16:07:41 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): api.github.com:443
16:07:41 [DEBUG] urllib3.connectionpool: https://api.github.com:443 "GET /repos/SkyworkAI/Matrix-Game/contents/Matrix-Game-2/README.md?ref=main HTTP/1.1" 200 None
16:07:41 [DEBUG] asyncio: Using selector: EpollSelector
16:07:41 [INFO] src.orchestration.metric_orchestrator: Starting orchestration with 7 metrics (limit=4, url=https://huggingface.co/google/gemma-2b)
16:07:41 [DEBUG] src.orchestration.metric_orchestrator: Dispatched 7 tasks (url=https://huggingface.co/google/gemma-2b)
16:07:41 [DEBUG] src.orchestration.metric_orchestrator: Acquired slot for performance_claims (url=https://huggingface.co/google/gemma-2b)
16:07:41 [DEBUG] src.orchestration.metric_orchestrator: Starting metric performance_claims for url=https://huggingface.co/google/gemma-2b
16:07:41 [INFO] root: Calling Purdue GenAI with prompt for performance metric:      Analyze the following README content for performance claims and evidence quality.       Look for:     1. Quantitative benchmark results (specific numbers, scores, metrics)     2. Comparisons with other models (with data)     3. Dataset evaluations and test results     4. Performance metrics (accuracy, F1, BLEU, etc.)     5. Subjective claims without evidence ("best in class", "state-of-the-art" without data)      Rate each type of claim on evidence quality and specificity.      README Conte...
16:07:41 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): genai.rcac.purdue.edu:443
16:08:03 [DEBUG] urllib3.connectionpool: https://genai.rcac.purdue.edu:443 "POST /api/chat/completions HTTP/1.1" 200 786
16:08:03 [INFO] root: Performance Metric -> Quality: 1.0, Specificity: 1.0, Total Claims: 5, Quantitative Claims: 5, Benchmark Count: 4, Has Tables/Charts: True
16:08:03 [INFO] src.orchestration.metric_orchestrator: Metric performance_claims succeeded in 21187 ms (url=https://huggingface.co/google/gemma-2b)
16:08:03 [DEBUG] src.orchestration.metric_orchestrator: Finished performance_claims (latency=21187 ms, error=False, url=https://huggingface.co/google/gemma-2b)
16:08:03 [DEBUG] src.orchestration.metric_orchestrator: Acquired slot for bus_factor (url=https://huggingface.co/google/gemma-2b)
16:08:03 [DEBUG] src.orchestration.metric_orchestrator: Starting metric bus_factor for url=https://huggingface.co/google/gemma-2b
16:08:03 [INFO] root: Bus Factor Metric -> contributors=3, top_share=0.61, score=0.54
16:08:03 [INFO] src.orchestration.metric_orchestrator: Metric bus_factor succeeded in 0 ms (url=https://huggingface.co/google/gemma-2b)
16:08:03 [DEBUG] src.orchestration.metric_orchestrator: Finished bus_factor (latency=0 ms, error=False, url=https://huggingface.co/google/gemma-2b)
16:08:03 [DEBUG] src.orchestration.metric_orchestrator: Acquired slot for code_quality (url=https://huggingface.co/google/gemma-2b)
16:08:03 [DEBUG] src.orchestration.metric_orchestrator: Starting metric code_quality for url=https://huggingface.co/google/gemma-2b
16:08:03 [INFO] root: Linting=1.0, Typing=1.0, Tests=0.7, Maintainability=0.0
16:08:03 [INFO] src.orchestration.metric_orchestrator: Metric code_quality succeeded in 164 ms (url=https://huggingface.co/google/gemma-2b)
16:08:03 [DEBUG] src.orchestration.metric_orchestrator: Finished code_quality (latency=164 ms, error=False, url=https://huggingface.co/google/gemma-2b)
16:08:03 [DEBUG] src.orchestration.metric_orchestrator: Acquired slot for license (url=https://huggingface.co/google/gemma-2b)
16:08:03 [DEBUG] src.orchestration.metric_orchestrator: Starting metric license for url=https://huggingface.co/google/gemma-2b
16:08:03 [INFO] root: license_check: source=LICENSE, spdx_ids=['Apache-2.0'], hints=['apache license', 'apache'] => Explicit SPDX whitelist: Apache-2.0
16:08:03 [DEBUG] src.orchestration.metric_orchestrator: Acquired slot for dataset_quality (url=https://huggingface.co/google/gemma-2b)
16:08:03 [DEBUG] src.orchestration.metric_orchestrator: Starting metric dataset_quality for url=https://huggingface.co/google/gemma-2b
16:08:03 [INFO] root: dataset_quality: not a dataset
16:08:03 [INFO] src.orchestration.metric_orchestrator: Metric dataset_quality succeeded in 0 ms (url=https://huggingface.co/google/gemma-2b)
16:08:03 [DEBUG] src.orchestration.metric_orchestrator: Finished dataset_quality (latency=0 ms, error=False, url=https://huggingface.co/google/gemma-2b)
16:08:03 [DEBUG] src.orchestration.metric_orchestrator: Acquired slot for ramp_up_time (url=https://huggingface.co/google/gemma-2b)
16:08:03 [DEBUG] src.orchestration.metric_orchestrator: Starting metric ramp_up_time for url=https://huggingface.co/google/gemma-2b
16:08:03 [INFO] root: Repo README subscore: install=1.0, usage=1.0, desc=1.0, io=1.0, links=1.0 => 1.000
16:08:03 [DEBUG] root: TOTAL PATHS: 1911
16:08:03 [DEBUG] root: PATH: 'jaxlib/mosaic/gpu/assembly_to_binary.cc'
16:08:03 [DEBUG] root: PATH: 'jaxlib/custom_call_sharding.cc'
16:08:03 [DEBUG] root: PATH: 'docs/pallas/CHANGELOG.md'
16:08:03 [DEBUG] root: PATH: 'tests/pallas/gpu_paged_attention_test.py'
16:08:03 [DEBUG] root: PATH: 'docs/notebooks/shard_map.ipynb'
16:08:03 [DEBUG] root: PATH: 'jax/scipy/stats/expon.py'
16:08:03 [DEBUG] root: PATH: 'tests/pallas/tpu_fusible_matmul_test.py'
16:08:03 [DEBUG] root: PATH: 'third_party/repo.bzl'
16:08:03 [DEBUG] root: PATH: '.github/workflows/jax-array-api.yml'
16:08:03 [DEBUG] root: PATH: 'jax/experimental/pallas/ops/gpu'
16:08:03 [DEBUG] root: PATH: 'jax/experimental/xla_metadata.py'
16:08:03 [DEBUG] root: PATH: 'jaxlib/ifrt_proxy.cc'
16:08:03 [DEBUG] root: PATH: 'jax/_src/pallas/mosaic/BUILD'
16:08:03 [DEBUG] root: PATH: 'docs/pallas/design/async_note.md'
16:08:03 [DEBUG] root: PATH: 'jax/experimental/pallas/ops/tpu/paged_attention'
16:08:03 [DEBUG] root: PATH: 'jax/experimental/custom_dce.py'
16:08:03 [DEBUG] root: PATH: 'jax/_src/internal_test_util/lazy_loader_module/__init__.py'
16:08:03 [DEBUG] root: PATH: 'docs/pallas/gpu/pipelining.ipynb'
16:08:03 [DEBUG] root: PATH: 'tests/pallas/tpu_pallas_random_test.py'
16:08:03 [DEBUG] root: PATH: 'jaxlib/gpu/blas_handle_pool.cc'
16:08:03 [DEBUG] root: PATH: 'docs/jax.experimental.pjit.rst'
16:08:03 [DEBUG] root: PATH: 'jax/_src/pallas/mosaic_gpu/pipeline.py'
16:08:03 [DEBUG] root: PATH: 'tests/key_reuse_test.py'
16:08:03 [DEBUG] root: PATH: 'ci/run_bazel_test_cuda_rbe.sh'
16:08:03 [DEBUG] root: PATH: 'jaxlib/_jax/profiler.pyi'
16:08:03 [INFO] root: Repo examples subscore: has_nb=True, has_ex=True, py_examples=42 => 0.700
16:08:03 [INFO] root: Repo manifest subscore: has_reqs=True, has_env=False, has_setup=True, has_pyproj=True, has_conda=False, has_docker=True, has_make=True, has_pipfile=False => 1.000
16:08:03 [INFO] src.orchestration.metric_orchestrator: Metric ramp_up_time succeeded in 13 ms (url=https://huggingface.co/google/gemma-2b)
16:08:03 [DEBUG] src.orchestration.metric_orchestrator: Finished ramp_up_time (latency=13 ms, error=False, url=https://huggingface.co/google/gemma-2b)
16:08:03 [DEBUG] src.orchestration.metric_orchestrator: Acquired slot for dataset_and_code_score (url=https://huggingface.co/google/gemma-2b)
16:08:03 [DEBUG] src.orchestration.metric_orchestrator: Starting metric dataset_and_code_score for url=https://huggingface.co/google/gemma-2b
16:08:03 [INFO] src.orchestration.metric_orchestrator: Metric dataset_and_code_score succeeded in 0 ms (url=https://huggingface.co/google/gemma-2b)
16:08:03 [DEBUG] src.orchestration.metric_orchestrator: Finished dataset_and_code_score (latency=0 ms, error=False, url=https://huggingface.co/google/gemma-2b)
16:08:03 [INFO] src.orchestration.metric_orchestrator: Metric license succeeded in 21 ms (url=https://huggingface.co/google/gemma-2b)
16:08:03 [DEBUG] src.orchestration.metric_orchestrator: Finished license (latency=21 ms, error=False, url=https://huggingface.co/google/gemma-2b)
16:08:03 [INFO] src.orchestration.metric_orchestrator: Orchestration finished in 21376 ms (success=7, failed=0, url=https://huggingface.co/google/gemma-2b)
16:08:03 [INFO] src.orchestration.metric_orchestrator: Starting orchestration with 7 metrics (limit=4, url=https://github.com/pallets/flask)
16:08:03 [DEBUG] src.orchestration.metric_orchestrator: Dispatched 7 tasks (url=https://github.com/pallets/flask)
16:08:03 [DEBUG] src.orchestration.metric_orchestrator: Acquired slot for performance_claims (url=https://github.com/pallets/flask)
16:08:03 [DEBUG] src.orchestration.metric_orchestrator: Starting metric performance_claims for url=https://github.com/pallets/flask
16:08:03 [INFO] root: Calling Purdue GenAI with prompt for performance metric:      Analyze the following README content for performance claims and evidence quality.       Look for:     1. Quantitative benchmark results (specific numbers, scores, metrics)     2. Comparisons with other models (with data)     3. Dataset evaluations and test results     4. Performance metrics (accuracy, F1, BLEU, etc.)     5. Subjective claims without evidence ("best in class", "state-of-the-art" without data)      Rate each type of claim on evidence quality and specificity.      README Conte...
16:08:03 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): genai.rcac.purdue.edu:443
16:08:06 [DEBUG] urllib3.connectionpool: https://genai.rcac.purdue.edu:443 "POST /api/chat/completions HTTP/1.1" 200 350
16:08:06 [INFO] root: Performance Metric -> Quality: 0.0, Specificity: 0.0, Total Claims: 0, Quantitative Claims: 0, Benchmark Count: 0, Has Tables/Charts: False
16:08:06 [INFO] src.orchestration.metric_orchestrator: Metric performance_claims succeeded in 3070 ms (url=https://github.com/pallets/flask)
16:08:06 [DEBUG] src.orchestration.metric_orchestrator: Finished performance_claims (latency=3070 ms, error=False, url=https://github.com/pallets/flask)
16:08:06 [DEBUG] src.orchestration.metric_orchestrator: Acquired slot for bus_factor (url=https://github.com/pallets/flask)
16:08:06 [DEBUG] src.orchestration.metric_orchestrator: Starting metric bus_factor for url=https://github.com/pallets/flask
16:08:06 [INFO] root: Bus Factor Metric -> contributors=100, top_share=0.39, score=0.78
16:08:06 [INFO] src.orchestration.metric_orchestrator: Metric bus_factor succeeded in 0 ms (url=https://github.com/pallets/flask)
16:08:06 [DEBUG] src.orchestration.metric_orchestrator: Finished bus_factor (latency=0 ms, error=False, url=https://github.com/pallets/flask)
16:08:06 [DEBUG] src.orchestration.metric_orchestrator: Acquired slot for code_quality (url=https://github.com/pallets/flask)
16:08:06 [DEBUG] src.orchestration.metric_orchestrator: Starting metric code_quality for url=https://github.com/pallets/flask
16:08:06 [INFO] root: Linting=1.0, Typing=1.0, Tests=0.7, Maintainability=0.0
16:08:06 [INFO] src.orchestration.metric_orchestrator: Metric code_quality succeeded in 161 ms (url=https://github.com/pallets/flask)
16:08:06 [DEBUG] src.orchestration.metric_orchestrator: Finished code_quality (latency=161 ms, error=False, url=https://github.com/pallets/flask)
16:08:06 [DEBUG] src.orchestration.metric_orchestrator: Acquired slot for license (url=https://github.com/pallets/flask)
16:08:06 [DEBUG] src.orchestration.metric_orchestrator: Starting metric license for url=https://github.com/pallets/flask
16:08:06 [DEBUG] src.orchestration.metric_orchestrator: Acquired slot for dataset_quality (url=https://github.com/pallets/flask)
16:08:06 [INFO] root: license_check: source=LICENSE, spdx_ids=['BSD-3-Clause'], hints=[] => Explicit SPDX whitelist: BSD-3-Clause
16:08:06 [DEBUG] src.orchestration.metric_orchestrator: Starting metric dataset_quality for url=https://github.com/pallets/flask
16:08:06 [WARNING] root: dataset_quality: no huggingface data available
16:08:06 [INFO] src.orchestration.metric_orchestrator: Metric dataset_quality succeeded in 0 ms (url=https://github.com/pallets/flask)
16:08:06 [DEBUG] src.orchestration.metric_orchestrator: Finished dataset_quality (latency=0 ms, error=False, url=https://github.com/pallets/flask)
16:08:06 [DEBUG] src.orchestration.metric_orchestrator: Acquired slot for ramp_up_time (url=https://github.com/pallets/flask)
16:08:06 [DEBUG] src.orchestration.metric_orchestrator: Starting metric ramp_up_time for url=https://github.com/pallets/flask
16:08:06 [INFO] root: Repo README subscore: install=0.0, usage=1.0, desc=0.0, io=1.0, links=1.0 => 0.600
16:08:06 [DEBUG] root: TOTAL PATHS: 285
16:08:06 [DEBUG] root: PATH: 'examples/javascript/tests/test_js_example.py'
16:08:06 [DEBUG] root: PATH: 'examples/tutorial/flaskr/static/style.css'
16:08:06 [DEBUG] root: PATH: 'examples/tutorial/flaskr/templates/auth/register.html'
16:08:06 [DEBUG] root: PATH: 'tests/test_apps/cliapp/inner1/inner2'
16:08:06 [DEBUG] root: PATH: 'docs/make.bat'
16:08:06 [DEBUG] root: PATH: 'examples/javascript/js_example/templates/fetch.html'
16:08:06 [DEBUG] root: PATH: 'tests/static/config.json'
16:08:06 [DEBUG] root: PATH: 'docs/patterns/appdispatch.rst'
16:08:06 [DEBUG] root: PATH: 'tests/test_apps/blueprintapp/apps/frontend/templates'
16:08:06 [DEBUG] root: PATH: 'docs/deploying/proxy_fix.rst'
16:08:06 [DEBUG] root: PATH: 'docs/shell.rst'
16:08:06 [DEBUG] root: PATH: 'src/flask/sansio/README.md'
16:08:06 [DEBUG] root: PATH: 'docs/patterns/celery.rst'
16:08:06 [DEBUG] root: PATH: 'docs/tutorial/flaskr_edit.png'
16:08:06 [DEBUG] root: PATH: 'examples/celery/src'
16:08:06 [DEBUG] root: PATH: 'examples/javascript/README.rst'
16:08:06 [DEBUG] root: PATH: 'docs/_static/debugger.png'
16:08:06 [DEBUG] root: PATH: 'tests/test_apps/cliapp/inner1'
16:08:06 [DEBUG] root: PATH: 'docs/patterns/packages.rst'
16:08:06 [DEBUG] root: PATH: 'docs/patterns/sqlalchemy.rst'
16:08:06 [DEBUG] root: PATH: 'examples/tutorial/flaskr/auth.py'
16:08:06 [DEBUG] root: PATH: 'docs/templating.rst'
16:08:06 [DEBUG] root: PATH: 'examples/tutorial/tests'
16:08:06 [DEBUG] root: PATH: '.github/ISSUE_TEMPLATE/config.yml'
16:08:06 [DEBUG] root: PATH: 'tests/templates/template_test.html'
16:08:06 [INFO] root: Repo examples subscore: has_nb=True, has_ex=True, py_examples=17 => 0.700
16:08:06 [INFO] root: Repo manifest subscore: has_reqs=True, has_env=False, has_setup=False, has_pyproj=True, has_conda=False, has_docker=False, has_make=True, has_pipfile=False => 1.000
16:08:06 [INFO] src.orchestration.metric_orchestrator: Metric ramp_up_time succeeded in 7 ms (url=https://github.com/pallets/flask)
16:08:06 [DEBUG] src.orchestration.metric_orchestrator: Finished ramp_up_time (latency=7 ms, error=False, url=https://github.com/pallets/flask)
16:08:06 [DEBUG] src.orchestration.metric_orchestrator: Acquired slot for dataset_and_code_score (url=https://github.com/pallets/flask)
16:08:06 [DEBUG] src.orchestration.metric_orchestrator: Starting metric dataset_and_code_score for url=https://github.com/pallets/flask
16:08:06 [INFO] src.orchestration.metric_orchestrator: Metric dataset_and_code_score succeeded in 0 ms (url=https://github.com/pallets/flask)
16:08:06 [DEBUG] src.orchestration.metric_orchestrator: Finished dataset_and_code_score (latency=0 ms, error=False, url=https://github.com/pallets/flask)
16:08:06 [INFO] src.orchestration.metric_orchestrator: Metric license succeeded in 12 ms (url=https://github.com/pallets/flask)
16:08:06 [DEBUG] src.orchestration.metric_orchestrator: Finished license (latency=12 ms, error=False, url=https://github.com/pallets/flask)
16:08:06 [INFO] src.orchestration.metric_orchestrator: Orchestration finished in 3247 ms (success=7, failed=0, url=https://github.com/pallets/flask)
16:08:06 [INFO] src.orchestration.metric_orchestrator: Starting orchestration with 7 metrics (limit=4, url=https://huggingface.co/google/gemma-3-270m)
16:08:06 [DEBUG] src.orchestration.metric_orchestrator: Dispatched 7 tasks (url=https://huggingface.co/google/gemma-3-270m)
16:08:06 [DEBUG] src.orchestration.metric_orchestrator: Acquired slot for performance_claims (url=https://huggingface.co/google/gemma-3-270m)
16:08:06 [DEBUG] src.orchestration.metric_orchestrator: Starting metric performance_claims for url=https://huggingface.co/google/gemma-3-270m
16:08:06 [INFO] root: Calling Purdue GenAI with prompt for performance metric:      Analyze the following README content for performance claims and evidence quality.       Look for:     1. Quantitative benchmark results (specific numbers, scores, metrics)     2. Comparisons with other models (with data)     3. Dataset evaluations and test results     4. Performance metrics (accuracy, F1, BLEU, etc.)     5. Subjective claims without evidence ("best in class", "state-of-the-art" without data)      Rate each type of claim on evidence quality and specificity.      README Conte...
16:08:06 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): genai.rcac.purdue.edu:443
16:08:19 [DEBUG] urllib3.connectionpool: https://genai.rcac.purdue.edu:443 "POST /api/chat/completions HTTP/1.1" 200 718
16:08:19 [INFO] root: Performance Metric -> Quality: 0.67, Specificity: 0.57, Total Claims: 3, Quantitative Claims: 0, Benchmark Count: 2, Has Tables/Charts: False
16:08:19 [INFO] src.orchestration.metric_orchestrator: Metric performance_claims succeeded in 13362 ms (url=https://huggingface.co/google/gemma-3-270m)
16:08:19 [DEBUG] src.orchestration.metric_orchestrator: Finished performance_claims (latency=13362 ms, error=False, url=https://huggingface.co/google/gemma-3-270m)
16:08:19 [DEBUG] src.orchestration.metric_orchestrator: Acquired slot for bus_factor (url=https://huggingface.co/google/gemma-3-270m)
16:08:19 [DEBUG] src.orchestration.metric_orchestrator: Starting metric bus_factor for url=https://huggingface.co/google/gemma-3-270m
16:08:19 [INFO] root: Bus Factor Metric -> contributors=2, top_share=0.80, score=0.25
16:08:19 [INFO] src.orchestration.metric_orchestrator: Metric bus_factor succeeded in 0 ms (url=https://huggingface.co/google/gemma-3-270m)
16:08:19 [DEBUG] src.orchestration.metric_orchestrator: Finished bus_factor (latency=0 ms, error=False, url=https://huggingface.co/google/gemma-3-270m)
16:08:19 [DEBUG] src.orchestration.metric_orchestrator: Acquired slot for code_quality (url=https://huggingface.co/google/gemma-3-270m)
16:08:19 [DEBUG] src.orchestration.metric_orchestrator: Starting metric code_quality for url=https://huggingface.co/google/gemma-3-270m
16:08:20 [INFO] root: Linting=1.0, Typing=1.0, Tests=0.7, Maintainability=0.0
16:08:20 [INFO] src.orchestration.metric_orchestrator: Metric code_quality succeeded in 179 ms (url=https://huggingface.co/google/gemma-3-270m)
16:08:20 [DEBUG] src.orchestration.metric_orchestrator: Finished code_quality (latency=179 ms, error=False, url=https://huggingface.co/google/gemma-3-270m)
16:08:20 [DEBUG] src.orchestration.metric_orchestrator: Acquired slot for license (url=https://huggingface.co/google/gemma-3-270m)
16:08:20 [DEBUG] src.orchestration.metric_orchestrator: Starting metric license for url=https://huggingface.co/google/gemma-3-270m
16:08:20 [DEBUG] src.orchestration.metric_orchestrator: Acquired slot for dataset_quality (url=https://huggingface.co/google/gemma-3-270m)
16:08:20 [DEBUG] src.orchestration.metric_orchestrator: Starting metric dataset_quality for url=https://huggingface.co/google/gemma-3-270m
16:08:20 [INFO] root: dataset_quality: not a dataset
16:08:20 [INFO] root: license_check: source=LICENSE, spdx_ids=['CC', 'CC0'], hints=['apache license', 'apache', 'cc0'] => Unknown license: CC
16:08:20 [INFO] src.orchestration.metric_orchestrator: Metric dataset_quality succeeded in 7 ms (url=https://huggingface.co/google/gemma-3-270m)
16:08:20 [DEBUG] src.orchestration.metric_orchestrator: Finished dataset_quality (latency=7 ms, error=False, url=https://huggingface.co/google/gemma-3-270m)
16:08:20 [DEBUG] src.orchestration.metric_orchestrator: Acquired slot for ramp_up_time (url=https://huggingface.co/google/gemma-3-270m)
16:08:20 [DEBUG] src.orchestration.metric_orchestrator: Starting metric ramp_up_time for url=https://huggingface.co/google/gemma-3-270m
16:08:20 [INFO] root: Repo README subscore: install=0.0, usage=1.0, desc=1.0, io=1.0, links=1.0 => 0.750
16:08:20 [DEBUG] root: TOTAL PATHS: 2401
16:08:20 [DEBUG] root: PATH: 'jaxlib/mosaic/gpu/assembly_to_binary.cc'
16:08:20 [DEBUG] root: PATH: 'jaxlib/custom_call_sharding.cc'
16:08:20 [DEBUG] root: PATH: 'docs/pallas/CHANGELOG.md'
16:08:20 [DEBUG] root: PATH: 'tests/pallas/gpu_paged_attention_test.py'
16:08:20 [DEBUG] root: PATH: 'docs/notebooks/shard_map.ipynb'
16:08:20 [DEBUG] root: PATH: 'jax/scipy/stats/expon.py'
16:08:20 [DEBUG] root: PATH: 'tests/pallas/tpu_fusible_matmul_test.py'
16:08:20 [DEBUG] root: PATH: 'third_party/repo.bzl'
16:08:20 [DEBUG] root: PATH: '.github/workflows/jax-array-api.yml'
16:08:20 [DEBUG] root: PATH: 'jax/experimental/pallas/ops/gpu'
16:08:20 [DEBUG] root: PATH: 'jax/experimental/xla_metadata.py'
16:08:20 [DEBUG] root: PATH: 'jaxlib/ifrt_proxy.cc'
16:08:20 [DEBUG] root: PATH: 'bbeh/benchmark_tasks/bbeh_zebra_puzzles/task.json'
16:08:20 [DEBUG] root: PATH: 'jax/_src/pallas/mosaic/BUILD'
16:08:20 [DEBUG] root: PATH: 'docs/pallas/design/async_note.md'
16:08:20 [DEBUG] root: PATH: 'jax/experimental/pallas/ops/tpu/paged_attention'
16:08:20 [DEBUG] root: PATH: 'big_vision/evaluators/proj/paligemma/transfers/tallyqa.py'
16:08:20 [DEBUG] root: PATH: 'bbeh/benchmark_tasks/bbeh_nycc/README.md'
16:08:20 [DEBUG] root: PATH: 'jax/experimental/custom_dce.py'
16:08:20 [DEBUG] root: PATH: 'jax/_src/internal_test_util/lazy_loader_module/__init__.py'
16:08:20 [DEBUG] root: PATH: 'bbeh/benchmark_tasks/bbeh_buggy_tables/README.md'
16:08:20 [DEBUG] root: PATH: 'docs/pallas/gpu/pipelining.ipynb'
16:08:20 [DEBUG] root: PATH: 'tests/pallas/tpu_pallas_random_test.py'
16:08:20 [DEBUG] root: PATH: 'jaxlib/gpu/blas_handle_pool.cc'
16:08:20 [DEBUG] root: PATH: 'big_vision/evaluators/proj/cappa/perplexity.py'
16:08:20 [INFO] root: Repo examples subscore: has_nb=True, has_ex=True, py_examples=42 => 0.700
16:08:20 [INFO] root: Repo manifest subscore: has_reqs=True, has_env=False, has_setup=True, has_pyproj=True, has_conda=False, has_docker=True, has_make=True, has_pipfile=False => 1.000
16:08:20 [INFO] src.orchestration.metric_orchestrator: Metric ramp_up_time succeeded in 11 ms (url=https://huggingface.co/google/gemma-3-270m)
16:08:20 [DEBUG] src.orchestration.metric_orchestrator: Finished ramp_up_time (latency=11 ms, error=False, url=https://huggingface.co/google/gemma-3-270m)
16:08:20 [DEBUG] src.orchestration.metric_orchestrator: Acquired slot for dataset_and_code_score (url=https://huggingface.co/google/gemma-3-270m)
16:08:20 [DEBUG] src.orchestration.metric_orchestrator: Starting metric dataset_and_code_score for url=https://huggingface.co/google/gemma-3-270m
16:08:20 [INFO] src.orchestration.metric_orchestrator: Metric dataset_and_code_score succeeded in 0 ms (url=https://huggingface.co/google/gemma-3-270m)
16:08:20 [DEBUG] src.orchestration.metric_orchestrator: Finished dataset_and_code_score (latency=0 ms, error=False, url=https://huggingface.co/google/gemma-3-270m)
16:08:20 [INFO] src.orchestration.metric_orchestrator: Metric license succeeded in 27 ms (url=https://huggingface.co/google/gemma-3-270m)
16:08:20 [DEBUG] src.orchestration.metric_orchestrator: Finished license (latency=27 ms, error=False, url=https://huggingface.co/google/gemma-3-270m)
16:08:20 [INFO] src.orchestration.metric_orchestrator: Orchestration finished in 13573 ms (success=7, failed=0, url=https://huggingface.co/google/gemma-3-270m)
16:08:20 [INFO] src.orchestration.metric_orchestrator: Starting orchestration with 7 metrics (limit=4, url=https://huggingface.co/datasets/xlangai/AgentNet)
16:08:20 [DEBUG] src.orchestration.metric_orchestrator: Dispatched 7 tasks (url=https://huggingface.co/datasets/xlangai/AgentNet)
16:08:20 [DEBUG] src.orchestration.metric_orchestrator: Acquired slot for performance_claims (url=https://huggingface.co/datasets/xlangai/AgentNet)
16:08:20 [DEBUG] src.orchestration.metric_orchestrator: Starting metric performance_claims for url=https://huggingface.co/datasets/xlangai/AgentNet
16:08:20 [ERROR] src.orchestration.metric_orchestrator: Metric performance_claims failed after 0 ms (url=https://huggingface.co/datasets/xlangai/AgentNet): list index out of range
16:08:20 [DEBUG] src.orchestration.metric_orchestrator: Finished performance_claims (latency=0 ms, error=True, url=https://huggingface.co/datasets/xlangai/AgentNet)
16:08:20 [DEBUG] src.orchestration.metric_orchestrator: Acquired slot for bus_factor (url=https://huggingface.co/datasets/xlangai/AgentNet)
16:08:20 [DEBUG] src.orchestration.metric_orchestrator: Starting metric bus_factor for url=https://huggingface.co/datasets/xlangai/AgentNet
16:08:20 [ERROR] src.orchestration.metric_orchestrator: Metric bus_factor failed after 0 ms (url=https://huggingface.co/datasets/xlangai/AgentNet): list index out of range
16:08:20 [DEBUG] src.orchestration.metric_orchestrator: Finished bus_factor (latency=0 ms, error=True, url=https://huggingface.co/datasets/xlangai/AgentNet)
16:08:20 [DEBUG] src.orchestration.metric_orchestrator: Acquired slot for code_quality (url=https://huggingface.co/datasets/xlangai/AgentNet)
16:08:20 [DEBUG] src.orchestration.metric_orchestrator: Starting metric code_quality for url=https://huggingface.co/datasets/xlangai/AgentNet
16:08:20 [ERROR] src.orchestration.metric_orchestrator: Metric code_quality failed after 0 ms (url=https://huggingface.co/datasets/xlangai/AgentNet): list index out of range
16:08:20 [DEBUG] src.orchestration.metric_orchestrator: Finished code_quality (latency=0 ms, error=True, url=https://huggingface.co/datasets/xlangai/AgentNet)
16:08:20 [DEBUG] src.orchestration.metric_orchestrator: Acquired slot for license (url=https://huggingface.co/datasets/xlangai/AgentNet)
16:08:20 [DEBUG] src.orchestration.metric_orchestrator: Starting metric license for url=https://huggingface.co/datasets/xlangai/AgentNet
16:08:20 [WARNING] root: license_check: no github data available
16:08:20 [INFO] src.orchestration.metric_orchestrator: Metric license succeeded in 0 ms (url=https://huggingface.co/datasets/xlangai/AgentNet)
16:08:20 [DEBUG] src.orchestration.metric_orchestrator: Finished license (latency=0 ms, error=False, url=https://huggingface.co/datasets/xlangai/AgentNet)
16:08:20 [DEBUG] src.orchestration.metric_orchestrator: Acquired slot for dataset_quality (url=https://huggingface.co/datasets/xlangai/AgentNet)
16:08:20 [DEBUG] src.orchestration.metric_orchestrator: Starting metric dataset_quality for url=https://huggingface.co/datasets/xlangai/AgentNet
16:08:20 [INFO] root: Dataset community score: likes=47 (0.336), downloads=2932 (0.433), combined=0.385
16:08:20 [INFO] root: Dataset doc score components: 0.0/9
16:08:20 [INFO] root: Dataset documentation score: 0.000
16:08:20 [INFO] src.orchestration.metric_orchestrator: Metric dataset_quality succeeded in 1 ms (url=https://huggingface.co/datasets/xlangai/AgentNet)
16:08:20 [DEBUG] src.orchestration.metric_orchestrator: Finished dataset_quality (latency=1 ms, error=False, url=https://huggingface.co/datasets/xlangai/AgentNet)
16:08:20 [DEBUG] src.orchestration.metric_orchestrator: Acquired slot for ramp_up_time (url=https://huggingface.co/datasets/xlangai/AgentNet)
16:08:20 [DEBUG] src.orchestration.metric_orchestrator: Starting metric ramp_up_time for url=https://huggingface.co/datasets/xlangai/AgentNet
16:08:20 [INFO] root: Repo README subscore: install=0.0, usage=0.0, desc=0.0, io=0.0, links=0.0 => 0.000
16:08:20 [DEBUG] root: TOTAL PATHS: 42
16:08:20 [DEBUG] root: PATH: 'win_mac_images/images.z12'
16:08:20 [DEBUG] root: PATH: 'agentnet_win_mac_18k.jsonl'
16:08:20 [DEBUG] root: PATH: 'ubuntu_images/images.z13'
16:08:20 [DEBUG] root: PATH: 'win_mac_images/images.z23'
16:08:20 [DEBUG] root: PATH: 'ubuntu_images/images.z05'
16:08:20 [DEBUG] root: PATH: 'win_mac_images/images.z06'
16:08:20 [DEBUG] root: PATH: 'ubuntu_images/images.z06'
16:08:20 [DEBUG] root: PATH: 'win_mac_images/images.z10'
16:08:20 [DEBUG] root: PATH: 'ubuntu_images/images.z03'
16:08:20 [DEBUG] root: PATH: 'ubuntu_images/images.z07'
16:08:20 [DEBUG] root: PATH: 'win_mac_images/images.z05'
16:08:20 [DEBUG] root: PATH: 'win_mac_images/images.z02'
16:08:20 [DEBUG] root: PATH: 'win_mac_images/images.z14'
16:08:20 [DEBUG] root: PATH: 'ubuntu_images/images.z02'
16:08:20 [DEBUG] root: PATH: 'ubuntu_images/images.z08'
16:08:20 [DEBUG] root: PATH: 'ubuntu_images/images.zip'
16:08:20 [DEBUG] root: PATH: 'ubuntu_images/images.z04'
16:08:20 [DEBUG] root: PATH: 'win_mac_images/images.z17'
16:08:20 [DEBUG] root: PATH: 'win_mac_images/images.z01'
16:08:20 [DEBUG] root: PATH: 'ubuntu_images/images.z10'
16:08:20 [DEBUG] root: PATH: 'win_mac_images/images.z20'
16:08:20 [DEBUG] root: PATH: 'ubuntu_images/images.z01'
16:08:20 [DEBUG] root: PATH: 'win_mac_images/images.z04'
16:08:20 [DEBUG] root: PATH: 'win_mac_images/images.zip'
16:08:20 [DEBUG] root: PATH: 'ubuntu_images/images.z12'
16:08:20 [INFO] root: Repo examples subscore: has_nb=False, has_ex=False, py_examples=0 => 0.000
16:08:20 [INFO] root: Repo manifest subscore: has_reqs=False, has_env=False, has_setup=False, has_pyproj=False, has_conda=False, has_docker=False, has_make=False, has_pipfile=False => 0.000
16:08:20 [INFO] src.orchestration.metric_orchestrator: Metric ramp_up_time succeeded in 8 ms (url=https://huggingface.co/datasets/xlangai/AgentNet)
16:08:20 [DEBUG] src.orchestration.metric_orchestrator: Finished ramp_up_time (latency=8 ms, error=False, url=https://huggingface.co/datasets/xlangai/AgentNet)
16:08:20 [DEBUG] src.orchestration.metric_orchestrator: Acquired slot for dataset_and_code_score (url=https://huggingface.co/datasets/xlangai/AgentNet)
16:08:20 [DEBUG] src.orchestration.metric_orchestrator: Starting metric dataset_and_code_score for url=https://huggingface.co/datasets/xlangai/AgentNet
16:08:20 [INFO] src.orchestration.metric_orchestrator: Metric dataset_and_code_score succeeded in 0 ms (url=https://huggingface.co/datasets/xlangai/AgentNet)
16:08:20 [DEBUG] src.orchestration.metric_orchestrator: Finished dataset_and_code_score (latency=0 ms, error=False, url=https://huggingface.co/datasets/xlangai/AgentNet)
16:08:20 [INFO] src.orchestration.metric_orchestrator: Orchestration finished in 18 ms (success=4, failed=3, url=https://huggingface.co/datasets/xlangai/AgentNet)
16:08:20 [INFO] src.orchestration.metric_orchestrator: Starting orchestration with 7 metrics (limit=4, url=https://github.com/SkyworkAI/Matrix-Game)
16:08:20 [DEBUG] src.orchestration.metric_orchestrator: Dispatched 7 tasks (url=https://github.com/SkyworkAI/Matrix-Game)
16:08:20 [DEBUG] src.orchestration.metric_orchestrator: Acquired slot for performance_claims (url=https://github.com/SkyworkAI/Matrix-Game)
16:08:20 [DEBUG] src.orchestration.metric_orchestrator: Starting metric performance_claims for url=https://github.com/SkyworkAI/Matrix-Game
16:08:20 [INFO] root: Calling Purdue GenAI with prompt for performance metric:      Analyze the following README content for performance claims and evidence quality.       Look for:     1. Quantitative benchmark results (specific numbers, scores, metrics)     2. Comparisons with other models (with data)     3. Dataset evaluations and test results     4. Performance metrics (accuracy, F1, BLEU, etc.)     5. Subjective claims without evidence ("best in class", "state-of-the-art" without data)      Rate each type of claim on evidence quality and specificity.      README Conte...
16:08:20 [DEBUG] urllib3.connectionpool: Starting new HTTPS connection (1): genai.rcac.purdue.edu:443
16:08:23 [DEBUG] urllib3.connectionpool: https://genai.rcac.purdue.edu:443 "POST /api/chat/completions HTTP/1.1" 200 351
16:08:23 [INFO] root: Performance Metric -> Quality: 0.0, Specificity: 0.0, Total Claims: 0, Quantitative Claims: 0, Benchmark Count: 0, Has Tables/Charts: False
16:08:23 [INFO] src.orchestration.metric_orchestrator: Metric performance_claims succeeded in 3356 ms (url=https://github.com/SkyworkAI/Matrix-Game)
16:08:23 [DEBUG] src.orchestration.metric_orchestrator: Finished performance_claims (latency=3356 ms, error=False, url=https://github.com/SkyworkAI/Matrix-Game)
16:08:23 [DEBUG] src.orchestration.metric_orchestrator: Acquired slot for bus_factor (url=https://github.com/SkyworkAI/Matrix-Game)
16:08:23 [DEBUG] src.orchestration.metric_orchestrator: Starting metric bus_factor for url=https://github.com/SkyworkAI/Matrix-Game
16:08:23 [INFO] root: Bus Factor Metric -> contributors=9, top_share=0.40, score=0.75
16:08:23 [INFO] src.orchestration.metric_orchestrator: Metric bus_factor succeeded in 0 ms (url=https://github.com/SkyworkAI/Matrix-Game)
16:08:23 [DEBUG] src.orchestration.metric_orchestrator: Finished bus_factor (latency=0 ms, error=False, url=https://github.com/SkyworkAI/Matrix-Game)
16:08:23 [DEBUG] src.orchestration.metric_orchestrator: Acquired slot for code_quality (url=https://github.com/SkyworkAI/Matrix-Game)
16:08:23 [DEBUG] src.orchestration.metric_orchestrator: Starting metric code_quality for url=https://github.com/SkyworkAI/Matrix-Game
16:08:23 [INFO] root: Linting=1.0, Typing=1.0, Tests=0.7, Maintainability=0.0
16:08:23 [INFO] src.orchestration.metric_orchestrator: Metric code_quality succeeded in 178 ms (url=https://github.com/SkyworkAI/Matrix-Game)
16:08:23 [DEBUG] src.orchestration.metric_orchestrator: Finished code_quality (latency=178 ms, error=False, url=https://github.com/SkyworkAI/Matrix-Game)
16:08:23 [DEBUG] src.orchestration.metric_orchestrator: Acquired slot for license (url=https://github.com/SkyworkAI/Matrix-Game)
16:08:23 [DEBUG] src.orchestration.metric_orchestrator: Starting metric license for url=https://github.com/SkyworkAI/Matrix-Game
16:08:23 [DEBUG] src.orchestration.metric_orchestrator: Acquired slot for dataset_quality (url=https://github.com/SkyworkAI/Matrix-Game)
16:08:23 [INFO] root: license_check: source=LICENSE, spdx_ids=['MIT'], hints=['mit license'] => Explicit SPDX whitelist: MIT
16:08:23 [DEBUG] src.orchestration.metric_orchestrator: Starting metric dataset_quality for url=https://github.com/SkyworkAI/Matrix-Game
16:08:23 [WARNING] root: dataset_quality: no huggingface data available
16:08:23 [INFO] src.orchestration.metric_orchestrator: Metric dataset_quality succeeded in 0 ms (url=https://github.com/SkyworkAI/Matrix-Game)
16:08:23 [DEBUG] src.orchestration.metric_orchestrator: Finished dataset_quality (latency=0 ms, error=False, url=https://github.com/SkyworkAI/Matrix-Game)
16:08:23 [DEBUG] src.orchestration.metric_orchestrator: Acquired slot for ramp_up_time (url=https://github.com/SkyworkAI/Matrix-Game)
16:08:23 [DEBUG] src.orchestration.metric_orchestrator: Starting metric ramp_up_time for url=https://github.com/SkyworkAI/Matrix-Game
16:08:23 [INFO] root: Repo README subscore: install=0.0, usage=0.0, desc=1.0, io=0.0, links=0.0 => 0.150
16:08:23 [DEBUG] root: TOTAL PATHS: 2115
16:08:23 [DEBUG] root: PATH: 'Matrix-Game-1/GameWorldScore/GameWorld/third_party/DROID-SLAM/thirdparty/eigen/demos/mix_eigen_and_c/binary_library.h'
16:08:23 [DEBUG] root: PATH: 'Matrix-Game-1/GameWorldScore/GameWorld/third_party/DROID-SLAM/thirdparty/eigen/bench/btl/cmake/MacroOptionalAddSubdirectory.cmake'
16:08:23 [DEBUG] root: PATH: 'Matrix-Game-1/GameWorldScore/GameWorld/third_party/DROID-SLAM/thirdparty/eigen/Eigen/src/SVD/SVDBase.h'
16:08:23 [DEBUG] root: PATH: 'Matrix-Game-1/GameWorldScore/GameWorld/third_party/DROID-SLAM/thirdparty/eigen/failtest/colpivqr_int.cpp'
16:08:23 [DEBUG] root: PATH: 'Matrix-Game-1/GameWorldScore/GameWorld/third_party/DROID-SLAM/thirdparty/eigen/unsupported/Eigen/src/SpecialFunctions/BesselFunctionsImpl.h'
16:08:23 [DEBUG] root: PATH: 'Matrix-Game-1/GameWorldScore/GameWorld/third_party/DROID-SLAM/thirdparty/eigen/Eigen/src/plugins/ReshapedMethods.h'
16:08:23 [DEBUG] root: PATH: 'Matrix-Game-1/matrixgame/vae_variants/__init__.py'
16:08:23 [DEBUG] root: PATH: 'Matrix-Game-1/teacache_forward.py'
16:08:23 [DEBUG] root: PATH: 'Matrix-Game-1/GameWorldScore/GameWorld/third_party/DROID-SLAM/thirdparty/eigen/bench/btl/actions/action_trisolve_matrix.hh'
16:08:23 [DEBUG] root: PATH: 'Matrix-Game-1/GameWorldScore/GameWorld/third_party/DROID-SLAM/thirdparty/eigen/doc/snippets/MatrixBase_reshaped_int_int.cpp'
16:08:23 [DEBUG] root: PATH: 'Matrix-Game-1/GameWorldScore/GameWorld/third_party/amt/LICENSE'
16:08:23 [DEBUG] root: PATH: 'Matrix-Game-1/matrixgame/encoder_variants/__init__.py'
16:08:23 [DEBUG] root: PATH: 'Matrix-Game-1/GameWorldScore/GameWorld/third_party/DROID-SLAM/thirdparty/eigen/Eigen/src/SparseCore/SparseFuzzy.h'
16:08:23 [DEBUG] root: PATH: 'Matrix-Game-1/GameWorldScore/GameWorld/third_party/DROID-SLAM/thirdparty/tartanair_tools/evaluation'
16:08:23 [DEBUG] root: PATH: 'Matrix-Game-1/matrixgame/model_variants/matrixgame_dit_src/utils.py'
16:08:23 [DEBUG] root: PATH: 'Matrix-Game-1/GameWorldScore/GameWorld/third_party/DROID-SLAM/thirdparty/eigen/ci/CTest2JUnit.xsl'
16:08:23 [DEBUG] root: PATH: 'Matrix-Game-1/GameWorldScore/GameWorld/third_party/DROID-SLAM/thirdparty/eigen/bench/benchmarkX.cpp'
16:08:23 [DEBUG] root: PATH: 'Matrix-Game-1/GameWorldScore/GameWorld/third_party/droid_slam/data_readers/augmentation.py'
16:08:23 [DEBUG] root: PATH: 'Matrix-Game-1/GameWorldScore/GameWorld/third_party/DROID-SLAM/thirdparty/eigen/Eigen/src/CholmodSupport'
16:08:23 [DEBUG] root: PATH: 'Matrix-Game-1/GameWorldScore/GameWorld/third_party/DROID-SLAM/thirdparty/eigen/cmake/FindGMP.cmake'
16:08:23 [DEBUG] root: PATH: 'Matrix-Game-1/GameWorldScore/GameWorld/third_party/amt/cfgs/IFRNet.yaml'
16:08:23 [DEBUG] root: PATH: 'Matrix-Game-1/GameWorldScore/GameWorld/third_party/DROID-SLAM/thirdparty/eigen/scripts'
16:08:23 [DEBUG] root: PATH: 'Matrix-Game-2/demo_images/temple_run/0005.png'
16:08:23 [DEBUG] root: PATH: 'Matrix-Game-1/GameWorldScore/GameWorld/third_party/DROID-SLAM/thirdparty/eigen/Eigen/src/PaStiXSupport/PaStiXSupport.h'
16:08:23 [DEBUG] root: PATH: 'Matrix-Game-1/GameWorldScore/GameWorld/third_party/DROID-SLAM/thirdparty/eigen/unsupported/Eigen/MoreVectorization'
16:08:23 [INFO] root: Repo examples subscore: has_nb=True, has_ex=True, py_examples=43 => 0.700
16:08:23 [INFO] root: Repo manifest subscore: has_reqs=True, has_env=True, has_setup=True, has_pyproj=False, has_conda=False, has_docker=False, has_make=False, has_pipfile=False => 1.000
16:08:23 [INFO] src.orchestration.metric_orchestrator: Metric ramp_up_time succeeded in 10 ms (url=https://github.com/SkyworkAI/Matrix-Game)
16:08:23 [DEBUG] src.orchestration.metric_orchestrator: Finished ramp_up_time (latency=10 ms, error=False, url=https://github.com/SkyworkAI/Matrix-Game)
16:08:23 [DEBUG] src.orchestration.metric_orchestrator: Acquired slot for dataset_and_code_score (url=https://github.com/SkyworkAI/Matrix-Game)
16:08:23 [DEBUG] src.orchestration.metric_orchestrator: Starting metric dataset_and_code_score for url=https://github.com/SkyworkAI/Matrix-Game
16:08:23 [INFO] src.orchestration.metric_orchestrator: Metric dataset_and_code_score succeeded in 0 ms (url=https://github.com/SkyworkAI/Matrix-Game)
16:08:23 [DEBUG] src.orchestration.metric_orchestrator: Finished dataset_and_code_score (latency=0 ms, error=False, url=https://github.com/SkyworkAI/Matrix-Game)
16:08:23 [INFO] src.orchestration.metric_orchestrator: Metric license succeeded in 14 ms (url=https://github.com/SkyworkAI/Matrix-Game)
16:08:23 [DEBUG] src.orchestration.metric_orchestrator: Finished license (latency=14 ms, error=False, url=https://github.com/SkyworkAI/Matrix-Game)
16:08:23 [INFO] src.orchestration.metric_orchestrator: Orchestration finished in 3554 ms (success=7, failed=0, url=https://github.com/SkyworkAI/Matrix-Game)
